[
  {
    "patternId": "CakePHP_Classes_ReturnTypeHint",
    "title": "Enforcing Return Type Hints in CakePHP Classes",
    "parameters": [],
    "description": "Ensure methods in CakePHP classes have return type hints.",
    "patPatBotReviewed": "2024-06-19T13:29:04.212Z"
  },
  {
    "patternId": "CakePHP_Commenting_DocBlockAlignment",
    "title": "Standardized DocBlock Alignment in CakePHP",
    "parameters": [],
    "description": "Ensure consistent alignment of CakePHP DocBlocks.",
    "patPatBotReviewed": "2024-06-19T13:29:22.606Z"
  },
  {
    "patternId": "CakePHP_Commenting_FunctionComment",
    "title": "Enhance Function Commenting in CakePHP",
    "parameters": [
      {
        "name": "minimumVisibility",
        "description": "minimumVisibility"
      }
    ],
    "description": "Ensure comprehensive and consistent function comments.",
    "patPatBotReviewed": "2024-06-19T13:29:43.717Z"
  },
  {
    "patternId": "CakePHP_Commenting_InheritDoc",
    "title": "Inheriting Documentation in CakePHP Methods",
    "parameters": [],
    "description": "Utilize `@inheritDoc` to maintain consistency in method comments.",
    "patPatBotReviewed": "2024-06-19T13:30:07.883Z"
  },
  {
    "patternId": "CakePHP_ControlStructures_ControlStructures",
    "title": "Ensuring Proper Control Structure Usage in CakePHP",
    "parameters": [],
    "description": "Optimize control structure use for better code quality.",
    "patPatBotReviewed": "2024-06-19T13:30:25.494Z"
  },
  {
    "patternId": "CakePHP_ControlStructures_ElseIfDeclaration",
    "title": "Consistent Else If Declaration in CakePHP",
    "parameters": [],
    "description": "Ensure consistent `else if` declaration in CakePHP code.",
    "patPatBotReviewed": "2024-06-19T13:30:42.444Z"
  },
  {
    "patternId": "CakePHP_ControlStructures_WhileStructures",
    "title": "Optimizing While Loop Structures in CakePHP",
    "parameters": [],
    "description": "Ensure optimized and readable while loop structures in CakePHP.",
    "patPatBotReviewed": "2024-06-19T13:31:00.920Z"
  },
  {
    "patternId": "CakePHP_Formatting_BlankLineBeforeReturn",
    "title": "Inserting Blank Line Before Return Statements",
    "parameters": [],
    "description": "Ensure a blank line precedes return statements.",
    "patPatBotReviewed": "2024-06-19T13:31:24.252Z"
  },
  {
    "patternId": "CakePHP_Functions_ClosureDeclaration",
    "title": "Consistent Closure Declarations in CakePHP",
    "parameters": [],
    "description": "Ensure closures are consistently declared in CakePHP code.",
    "patPatBotReviewed": "2024-06-19T13:33:56.352Z"
  },
  {
    "patternId": "CakePHP_NamingConventions_ValidFunctionName",
    "title": "Consistent Function Naming in CakePHP",
    "parameters": [],
    "description": "Ensure functions follow CakePHP naming conventions.",
    "patPatBotReviewed": "2024-06-19T13:34:17.867Z"
  },
  {
    "patternId": "CakePHP_NamingConventions_ValidTraitName",
    "title": "Valid Naming Conventions for Traits",
    "parameters": [],
    "description": "Ensure trait names follow CakePHP naming conventions.",
    "patPatBotReviewed": "2024-06-19T13:34:31.565Z"
  },
  {
    "patternId": "CakePHP_PHP_DisallowShortOpenTag",
    "title": "Avoid Using Short PHP Open Tags",
    "parameters": [],
    "description": "Ensure full PHP tags are used consistently.",
    "patPatBotReviewed": "2024-06-19T13:34:46.252Z"
  },
  {
    "patternId": "CakePHP_PHP_SingleQuote",
    "title": "Ensure Single Quote Usage for String Literals",
    "parameters": [],
    "description": "Ensure consistent use of single quotes for strings.",
    "patPatBotReviewed": "2024-06-19T13:35:14.654Z"
  },
  {
    "patternId": "CakePHP_WhiteSpace_EmptyLines",
    "title": "Managing Empty Lines for Code Clarity",
    "parameters": [],
    "description": "Maintain clean spacing for improved code readability.",
    "patPatBotReviewed": "2024-06-19T13:35:30.858Z"
  },
  {
    "patternId": "CakePHP_WhiteSpace_FunctionCallSpacing",
    "title": "Consistent Function Call Spacing",
    "parameters": [],
    "description": "Enforce uniform spacing in function calls.",
    "patPatBotReviewed": "2024-06-19T13:35:50.632Z"
  },
  {
    "patternId": "CakePHP_WhiteSpace_FunctionClosingBraceSpace",
    "title": "Proper Spacing After Function Closing Brace",
    "parameters": [],
    "description": "Enforce correct spacing after function closing braces.",
    "patPatBotReviewed": "2024-06-19T13:36:14.174Z"
  },
  {
    "patternId": "CakePHP_WhiteSpace_FunctionOpeningBraceSpace",
    "title": "Function Opening Brace Spacing",
    "parameters": [],
    "description": "Ensure single space before function opening brace.",
    "patPatBotReviewed": "2024-06-19T13:36:32.268Z"
  },
  {
    "patternId": "CakePHP_WhiteSpace_FunctionSpacing",
    "title": "Consistent Function Spacing in CakePHP Code",
    "parameters": [],
    "description": "Maintain uniform spacing around functions.",
    "patPatBotReviewed": "2024-06-19T13:36:59.149Z"
  },
  {
    "patternId": "CakePHP_WhiteSpace_TabAndSpace",
    "title": "Consistent White Space Usage",
    "parameters": [],
    "description": "Detect and fix mixed tabs and spaces.",
    "patPatBotReviewed": "2024-06-19T13:37:20.013Z"
  },
  {
    "patternId": "Drupal_Arrays_Array",
    "title": "Drupal Array Management",
    "parameters": [
      {
        "name": "lineLimit",
        "description": "lineLimit"
      }
    ],
    "description": "Optimize array handling in your Drupal projects.",
    "patPatBotReviewed": "2024-06-19T13:37:36.091Z"
  },
  {
    "patternId": "Drupal_Arrays_DisallowLongArraySyntax",
    "title": "Arrays: Disallow Long Array Syntax",
    "parameters": []
  },
  {
    "patternId": "Drupal_CSS_ClassDefinitionNameSpacing",
    "title": "CSS: Class Definition Name Spacing",
    "parameters": []
  },
  {
    "patternId": "Drupal_CSS_ColourDefinition",
    "title": "CSS: Colour Definition",
    "parameters": []
  },
  {
    "patternId": "Drupal_Classes_ClassCreateInstance",
    "title": "Classes: Class Create Instance",
    "parameters": []
  },
  {
    "patternId": "Drupal_Classes_ClassDeclaration",
    "title": "Classes: Class Declaration",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "Drupal_Classes_ClassFileName",
    "title": "Classes: Class File Name",
    "parameters": []
  },
  {
    "patternId": "Drupal_Classes_FullyQualifiedNamespace",
    "title": "Classes: Fully Qualified Namespace",
    "parameters": []
  },
  {
    "patternId": "Drupal_Classes_InterfaceName",
    "title": "Classes: Interface Name",
    "parameters": []
  },
  {
    "patternId": "Drupal_Classes_PropertyDeclaration",
    "title": "Classes: Property Declaration",
    "parameters": []
  },
  {
    "patternId": "Drupal_Classes_UnusedUseStatement",
    "title": "Classes: Unused Use Statement",
    "parameters": []
  },
  {
    "patternId": "Drupal_Classes_UseGlobalClass",
    "title": "Classes: Use Global Class",
    "parameters": []
  },
  {
    "patternId": "Drupal_Classes_UseLeadingBackslash",
    "title": "Classes: Use Leading Backslash",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_ClassComment",
    "title": "Commenting: Class Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_DataTypeNamespace",
    "title": "Commenting: Data Type Namespace",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_Deprecated",
    "title": "Commenting: Deprecated",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_DocComment",
    "title": "Commenting: Doc Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_DocCommentAlignment",
    "title": "Commenting: Doc Comment Alignment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_DocCommentLongArraySyntax",
    "title": "Commenting: Doc Comment Long Array Syntax",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_DocCommentStar",
    "title": "Commenting: Doc Comment Star",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_FileComment",
    "title": "Commenting: File Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_FunctionComment",
    "title": "Commenting: Function Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_GenderNeutralComment",
    "title": "Commenting: Gender Neutral Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_HookComment",
    "title": "Commenting: Hook Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_InlineComment",
    "title": "Commenting: Inline Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_InlineVariableComment",
    "title": "Commenting: Inline Variable Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_PostStatementComment",
    "title": "Commenting: Post Statement Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_TodoComment",
    "title": "Commenting: Todo Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Commenting_VariableComment",
    "title": "Commenting: Variable Comment",
    "parameters": []
  },
  {
    "patternId": "Drupal_ControlStructures_ControlSignature",
    "title": "Control Structures: Control Signature",
    "parameters": []
  },
  {
    "patternId": "Drupal_ControlStructures_ElseIf",
    "title": "Control Structures: Else If",
    "parameters": []
  },
  {
    "patternId": "Drupal_ControlStructures_InlineControlStructure",
    "title": "Control Structures: Inline Control Structure",
    "parameters": []
  },
  {
    "patternId": "Drupal_Files_EndFileNewline",
    "title": "Files: End File Newline",
    "parameters": []
  },
  {
    "patternId": "Drupal_Files_FileEncoding",
    "title": "Files: File Encoding",
    "parameters": []
  },
  {
    "patternId": "Drupal_Files_LineLength",
    "title": "Files: Line Length",
    "parameters": [
      {
        "name": "lineLimit",
        "description": "lineLimit"
      },
      {
        "name": "absoluteLineLimit",
        "description": "absoluteLineLimit"
      }
    ]
  },
  {
    "patternId": "Drupal_Files_TxtFileLineLength",
    "title": "Files: Txt File Line Length",
    "parameters": []
  },
  {
    "patternId": "Drupal_Formatting_MultiLineAssignment",
    "title": "Formatting: Multi Line Assignment",
    "parameters": []
  },
  {
    "patternId": "Drupal_Formatting_MultipleStatementAlignment",
    "title": "Formatting: Multiple Statement Alignment",
    "parameters": [
      {
        "name": "error",
        "description": "error"
      }
    ]
  },
  {
    "patternId": "Drupal_Formatting_SpaceInlineIf",
    "title": "Formatting: Space Inline If",
    "parameters": []
  },
  {
    "patternId": "Drupal_Formatting_SpaceUnaryOperator",
    "title": "Formatting: Space Unary Operator",
    "parameters": []
  },
  {
    "patternId": "Drupal_Functions_DiscouragedFunctions",
    "title": "Functions: Discouraged Functions",
    "parameters": [
      {
        "name": "error",
        "description": "error"
      }
    ]
  },
  {
    "patternId": "Drupal_Functions_FunctionDeclaration",
    "title": "Functions: Function Declaration",
    "parameters": []
  },
  {
    "patternId": "Drupal_Functions_MultiLineFunctionDeclaration",
    "title": "Functions: Multi Line Function Declaration",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "Drupal_InfoFiles_AutoAddedKeys",
    "title": "Info Files: Auto Added Keys",
    "parameters": []
  },
  {
    "patternId": "Drupal_InfoFiles_ClassFiles",
    "title": "Info Files: Class Files",
    "parameters": []
  },
  {
    "patternId": "Drupal_InfoFiles_DependenciesArray",
    "title": "Info Files: Dependencies Array",
    "parameters": []
  },
  {
    "patternId": "Drupal_InfoFiles_DuplicateEntry",
    "title": "Info Files: Duplicate Entry",
    "parameters": []
  },
  {
    "patternId": "Drupal_InfoFiles_Required",
    "title": "Info Files: Required",
    "parameters": []
  },
  {
    "patternId": "Drupal_Methods_MethodDeclaration",
    "title": "Methods: Method Declaration",
    "parameters": []
  },
  {
    "patternId": "Drupal_NamingConventions_ValidClassName",
    "title": "Naming Conventions: Valid Class Name",
    "parameters": []
  },
  {
    "patternId": "Drupal_NamingConventions_ValidFunctionName",
    "title": "Naming Conventions: Valid Function Name",
    "parameters": []
  },
  {
    "patternId": "Drupal_NamingConventions_ValidGlobal",
    "title": "Naming Conventions: Valid Global",
    "parameters": []
  },
  {
    "patternId": "Drupal_NamingConventions_ValidVariableName",
    "title": "Naming Conventions: Valid Variable Name",
    "parameters": []
  },
  {
    "patternId": "Drupal_Scope_MethodScope",
    "title": "Scope: Method Scope",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_ConstantName",
    "title": "Semantics: Constant Name",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_EmptyInstall",
    "title": "Semantics: Empty Install",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_FunctionAlias",
    "title": "Semantics: Function Alias",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_FunctionT",
    "title": "Semantics: Function T",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_FunctionTriggerError",
    "title": "Semantics: Function Trigger Error",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_FunctionWatchdog",
    "title": "Semantics: Function Watchdog",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_InstallHooks",
    "title": "Semantics: Install Hooks",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_LStringTranslatable",
    "title": "Semantics: L String Translatable",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_PregSecurity",
    "title": "Semantics: Preg Security",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_RemoteAddress",
    "title": "Semantics: Remote Address",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_TInHookMenu",
    "title": "Semantics: T In Hook Menu",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_TInHookSchema",
    "title": "Semantics: T In Hook Schema",
    "parameters": []
  },
  {
    "patternId": "Drupal_Semantics_UnsilencedDeprecation",
    "title": "Semantics: Unsilenced Deprecation",
    "parameters": []
  },
  {
    "patternId": "Drupal_Strings_UnnecessaryStringConcat",
    "title": "Strings: Unnecessary String Concat",
    "parameters": []
  },
  {
    "patternId": "Drupal_WhiteSpace_CloseBracketSpacing",
    "title": "White Space: Close Bracket Spacing",
    "parameters": []
  },
  {
    "patternId": "Drupal_WhiteSpace_Comma",
    "title": "White Space: Comma",
    "parameters": []
  },
  {
    "patternId": "Drupal_WhiteSpace_EmptyLines",
    "title": "White Space: Empty Lines",
    "parameters": []
  },
  {
    "patternId": "Drupal_WhiteSpace_Namespace",
    "title": "White Space: Namespace",
    "parameters": []
  },
  {
    "patternId": "Drupal_WhiteSpace_ObjectOperatorIndent",
    "title": "White Space: Object Operator Indent",
    "parameters": []
  },
  {
    "patternId": "Drupal_WhiteSpace_ObjectOperatorSpacing",
    "title": "White Space: Object Operator Spacing",
    "parameters": []
  },
  {
    "patternId": "Drupal_WhiteSpace_OpenBracketSpacing",
    "title": "White Space: Open Bracket Spacing",
    "parameters": []
  },
  {
    "patternId": "Drupal_WhiteSpace_OpenTagNewline",
    "title": "White Space: Open Tag Newline",
    "parameters": []
  },
  {
    "patternId": "Drupal_WhiteSpace_ScopeClosingBrace",
    "title": "White Space: Scope Closing Brace",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "Drupal_WhiteSpace_ScopeIndent",
    "title": "White Space: Scope Indent",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      },
      {
        "name": "exact",
        "description": "exact"
      },
      {
        "name": "tabIndent",
        "description": "tabIndent"
      }
    ]
  },
  {
    "patternId": "Generic_Arrays_ArrayIndent",
    "title": "Arrays: Array Indent",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "Generic_Arrays_DisallowLongArraySyntax",
    "title": "Short Array Syntax",
    "description": "Short array syntax must be used to define arrays.",
    "parameters": []
  },
  {
    "patternId": "Generic_Arrays_DisallowShortArraySyntax",
    "title": "Long Array Syntax",
    "description": "Long array syntax must be used to define arrays.",
    "parameters": []
  },
  {
    "patternId": "Generic_Classes_DuplicateClassName",
    "title": "Duplicate Class Names",
    "description": "Class and Interface names should be unique in a project.  They should never be duplicated.",
    "parameters": []
  },
  {
    "patternId": "Generic_Classes_OpeningBraceSameLine",
    "title": "Opening Brace on Same Line",
    "description": "The opening brace of a class must be on the same line after the definition and must be the last thing on that line.",
    "parameters": []
  },
  {
    "patternId": "Generic_CodeAnalysis_AssignmentInCondition",
    "title": "Assignment In Condition",
    "description": "Variable assignments should not be made within conditions.",
    "parameters": []
  },
  {
    "patternId": "Generic_CodeAnalysis_EmptyPHPStatement",
    "title": "Code Analysis: Empty PHP Statement",
    "parameters": []
  },
  {
    "patternId": "Generic_CodeAnalysis_EmptyStatement",
    "title": "Empty Statements",
    "description": "Control Structures must have at least one statement inside of the body.",
    "parameters": []
  },
  {
    "patternId": "Generic_CodeAnalysis_ForLoopShouldBeWhileLoop",
    "title": "Condition-Only For Loops",
    "description": "For loops that have only a second expression (the condition) should be converted to while loops.",
    "parameters": []
  },
  {
    "patternId": "Generic_CodeAnalysis_ForLoopWithTestFunctionCall",
    "title": "For Loops With Function Calls in the Test",
    "description": "For loops should not call functions inside the test for the loop when they can be computed beforehand.",
    "parameters": []
  },
  {
    "patternId": "Generic_CodeAnalysis_JumbledIncrementer",
    "title": "Jumbled Incrementers",
    "description": "Incrementers in nested loops should use different variable names.",
    "parameters": []
  },
  {
    "patternId": "Generic_CodeAnalysis_UnconditionalIfStatement",
    "title": "Unconditional If Statements",
    "description": "If statements that are always evaluated should not be used.",
    "parameters": []
  },
  {
    "patternId": "Generic_CodeAnalysis_UnnecessaryFinalModifier",
    "title": "Unnecessary Final Modifiers",
    "description": "Methods should not be declared final inside of classes that are declared final.",
    "parameters": []
  },
  {
    "patternId": "Generic_CodeAnalysis_UnusedFunctionParameter",
    "title": "Unused function parameters",
    "description": "All parameters in a functions signature should be used within the function.",
    "parameters": []
  },
  {
    "patternId": "Generic_CodeAnalysis_UselessOverridingMethod",
    "title": "Useless Overriding Methods",
    "description": "Methods should not be defined that only call the parent method.",
    "parameters": []
  },
  {
    "patternId": "Generic_Commenting_DocComment",
    "title": "Commenting: Doc Comment",
    "parameters": []
  },
  {
    "patternId": "Generic_Commenting_Fixme",
    "title": "Fixme Comments",
    "description": "FIXME Statements should be taken care of.",
    "parameters": []
  },
  {
    "patternId": "Generic_Commenting_Todo",
    "title": "Todo Comments",
    "description": "TODO Statements should be taken care of.",
    "parameters": []
  },
  {
    "patternId": "Generic_ControlStructures_DisallowYodaConditions",
    "title": "Disallow Yoda conditions",
    "description": "Yoda conditions are disallowed.",
    "parameters": []
  },
  {
    "patternId": "Generic_ControlStructures_InlineControlStructure",
    "title": "Inline Control Structures",
    "description": "Control Structures should use braces.",
    "parameters": [
      {
        "name": "error",
        "description": "error"
      }
    ]
  },
  {
    "patternId": "Generic_Debug_CSSLint",
    "title": "CSSLint",
    "description": "All css files should pass the basic csslint tests.",
    "parameters": []
  },
  {
    "patternId": "Generic_Debug_ClosureLinter",
    "title": "Closure Linter",
    "description": "All javascript files should pass basic Closure Linter tests.",
    "parameters": []
  },
  {
    "patternId": "Generic_Debug_ESLint",
    "title": "Debug: ES Lint",
    "parameters": [
      {
        "name": "configFile",
        "description": "configFile"
      }
    ]
  },
  {
    "patternId": "Generic_Debug_JSHint",
    "title": "JSHint",
    "description": "All javascript files should pass basic JSHint tests.",
    "parameters": []
  },
  {
    "patternId": "Generic_Files_ByteOrderMark",
    "title": "Byte Order Marks",
    "description": "Byte Order Marks that may corrupt your application should not be used.  These include 0xefbbbf (UTF-8), 0xfeff (UTF-16 BE) and 0xfffe (UTF-16 LE).",
    "parameters": []
  },
  {
    "patternId": "Generic_Files_EndFileNewline",
    "title": "End of File Newline",
    "description": "Files should end with a newline character.",
    "parameters": []
  },
  {
    "patternId": "Generic_Files_EndFileNoNewline",
    "title": "No End of File Newline",
    "description": "Files should not end with a newline character.",
    "parameters": []
  },
  {
    "patternId": "Generic_Files_ExecutableFile",
    "title": "Executable Files",
    "description": "Files should not be executable.",
    "parameters": []
  },
  {
    "patternId": "Generic_Files_InlineHTML",
    "title": "Inline HTML",
    "description": "Files that contain php code should only have php code and should not have any \"inline html\".",
    "parameters": []
  },
  {
    "patternId": "Generic_Files_LineEndings",
    "title": "Line Endings",
    "description": "Unix-style line endings are preferred (\"\\n\" instead of \"\\r\\n\").",
    "parameters": [
      {
        "name": "eolChar",
        "description": "eolChar"
      }
    ]
  },
  {
    "patternId": "Generic_Files_LineLength",
    "title": "Line Length",
    "description": "It is recommended to keep lines at approximately 80 characters long for better code readability.",
    "parameters": [
      {
        "name": "lineLimit",
        "description": "lineLimit"
      },
      {
        "name": "absoluteLineLimit",
        "description": "absoluteLineLimit"
      },
      {
        "name": "ignoreComments",
        "description": "ignoreComments"
      }
    ]
  },
  {
    "patternId": "Generic_Files_LowercasedFilename",
    "title": "Lowercased Filenames",
    "description": "Lowercase filenames are required.",
    "parameters": []
  },
  {
    "patternId": "Generic_Files_OneClassPerFile",
    "title": "One Class Per File",
    "description": "There should only be one class defined in a file.",
    "parameters": []
  },
  {
    "patternId": "Generic_Files_OneInterfacePerFile",
    "title": "One Interface Per File",
    "description": "There should only be one interface defined in a file.",
    "parameters": []
  },
  {
    "patternId": "Generic_Files_OneObjectStructurePerFile",
    "title": "One Object Structure Per File",
    "description": "There should only be one class or interface or trait defined in a file.",
    "parameters": []
  },
  {
    "patternId": "Generic_Files_OneTraitPerFile",
    "title": "One Trait Per File",
    "description": "There should only be one trait defined in a file.",
    "parameters": []
  },
  {
    "patternId": "Generic_Formatting_DisallowMultipleStatements",
    "title": "Multiple Statements On a Single Line",
    "description": "Multiple statements are not allowed on a single line.",
    "parameters": []
  },
  {
    "patternId": "Generic_Formatting_MultipleStatementAlignment",
    "title": "Aligning Blocks of Assignments",
    "description": "There should be one space on either side of an equals sign used to assign a value to a variable. In the case of a block of related assignments, more space may be inserted to promote readability.",
    "parameters": [
      {
        "name": "error",
        "description": "error"
      },
      {
        "name": "maxPadding",
        "description": "maxPadding"
      },
      {
        "name": "alignAtEnd",
        "description": "alignAtEnd"
      }
    ]
  },
  {
    "patternId": "Generic_Formatting_NoSpaceAfterCast",
    "title": "Space After Casts",
    "description": "Spaces are not allowed after casting operators.",
    "parameters": []
  },
  {
    "patternId": "Generic_Formatting_SpaceAfterCast",
    "title": "Space After Casts",
    "description": "Exactly one space is allowed after a cast.",
    "parameters": [
      {
        "name": "spacing",
        "description": "spacing"
      },
      {
        "name": "ignoreNewlines",
        "description": "ignoreNewlines"
      }
    ]
  },
  {
    "patternId": "Generic_Formatting_SpaceAfterNot",
    "title": "Space After NOT operator",
    "description": "Exactly one space is allowed after the NOT operator.",
    "parameters": [
      {
        "name": "spacing",
        "description": "spacing"
      },
      {
        "name": "ignoreNewlines",
        "description": "ignoreNewlines"
      }
    ]
  },
  {
    "patternId": "Generic_Formatting_SpaceBeforeCast",
    "title": "Formatting: Space Before Cast",
    "parameters": []
  },
  {
    "patternId": "Generic_Functions_CallTimePassByReference",
    "title": "Call-Time Pass-By-Reference",
    "description": "Call-time pass-by-reference is not allowed. It should be declared in the function definition.",
    "parameters": []
  },
  {
    "patternId": "Generic_Functions_FunctionCallArgumentSpacing",
    "title": "Function Argument Spacing",
    "description": "Function arguments should have one space after a comma, and single spaces surrounding the equals sign for default values.",
    "parameters": []
  },
  {
    "patternId": "Generic_Functions_OpeningFunctionBraceBsdAllman",
    "title": "Opening Brace in Function Declarations",
    "description": "Function declarations follow the \"BSD/Allman style\". The function brace is on the line following the function declaration and is indented to the same column as the start of the function declaration.",
    "parameters": [
      {
        "name": "checkFunctions",
        "description": "checkFunctions"
      },
      {
        "name": "checkClosures",
        "description": "checkClosures"
      }
    ]
  },
  {
    "patternId": "Generic_Functions_OpeningFunctionBraceKernighanRitchie",
    "title": "Opening Brace in Function Declarations",
    "description": "Function declarations follow the \"Kernighan/Ritchie style\". The function brace is on the same line as the function declaration. One space is required between the closing parenthesis and the brace.",
    "parameters": [
      {
        "name": "checkFunctions",
        "description": "checkFunctions"
      },
      {
        "name": "checkClosures",
        "description": "checkClosures"
      }
    ]
  },
  {
    "patternId": "Generic_Metrics_CyclomaticComplexity",
    "title": "Cyclomatic Complexity",
    "description": "Functions should not have a cyclomatic complexity greater than 20, and should try to stay below a complexity of 10.",
    "parameters": [
      {
        "name": "complexity",
        "description": "complexity"
      },
      {
        "name": "absoluteComplexity",
        "description": "absoluteComplexity"
      }
    ]
  },
  {
    "patternId": "Generic_Metrics_NestingLevel",
    "title": "Nesting Level",
    "description": "Functions should not have a nesting level greater than 10, and should try to stay below 5.",
    "parameters": [
      {
        "name": "nestingLevel",
        "description": "nestingLevel"
      },
      {
        "name": "absoluteNestingLevel",
        "description": "absoluteNestingLevel"
      }
    ]
  },
  {
    "patternId": "Generic_NamingConventions_AbstractClassNamePrefix",
    "title": "Abstract class name",
    "description": "Abstract class names must be prefixed with \"Abstract\", e.g. AbstractBar.",
    "parameters": []
  },
  {
    "patternId": "Generic_NamingConventions_CamelCapsFunctionName",
    "title": "camelCaps Function Names",
    "description": "Functions should use camelCaps format for their names. Only PHP's magic methods should use a double underscore prefix.",
    "parameters": [
      {
        "name": "strict",
        "description": "strict"
      }
    ]
  },
  {
    "patternId": "Generic_NamingConventions_ConstructorName",
    "title": "Constructor name",
    "description": "Constructors should be named __construct, not after the class.",
    "parameters": []
  },
  {
    "patternId": "Generic_NamingConventions_InterfaceNameSuffix",
    "title": "Interface name suffix",
    "description": "Interface names must be suffixed with \"Interface\", e.g. BarInterface.",
    "parameters": []
  },
  {
    "patternId": "Generic_NamingConventions_TraitNameSuffix",
    "title": "Trait name suffix",
    "description": "Trait names must be suffixed with \"Trait\", e.g. BarTrait.",
    "parameters": []
  },
  {
    "patternId": "Generic_NamingConventions_UpperCaseConstantName",
    "title": "Constant Names",
    "description": "Constants should always be all-uppercase, with underscores to separate words.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_BacktickOperator",
    "title": "Backtick Operator",
    "description": "Disallow the use of the backtick operator for execution of shell commands.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_CharacterBeforePHPOpeningTag",
    "title": "Opening Tag at Start of File",
    "description": "The opening php tag should be the first item in the file.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_ClosingPHPTag",
    "title": "Closing PHP Tags",
    "description": "All opening php tags should have a corresponding closing tag.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_DeprecatedFunctions",
    "title": "Deprecated Functions",
    "description": "Deprecated functions should not be used.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_DisallowAlternativePHPTags",
    "title": "Alternative PHP Code Tags",
    "description": "Always use <?php ?> to delimit PHP code, do not use the ASP <% %> style tags nor the <script language=\"php\"></script> tags. This is the most portable way to include PHP code on differing operating systems and setups.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_DisallowRequestSuperglobal",
    "title": "$_REQUEST Superglobal",
    "description": "$_REQUEST should never be used due to the ambiguity created as to where the data is coming from. Use $_POST, $_GET, or $_COOKIE instead.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_DisallowShortOpenTag",
    "title": "PHP Code Tags",
    "description": "Always use <?php ?> to delimit PHP code, not the <? ?> shorthand. This is the most portable way to include PHP code on differing operating systems and setups.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_DiscourageGoto",
    "title": "Goto",
    "description": "Discourage the use of the PHP `goto` language construct.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_ForbiddenFunctions",
    "title": "Forbidden Functions",
    "description": "The forbidden functions sizeof() and delete() should not be used.",
    "parameters": [
      {
        "name": "error",
        "description": "error"
      }
    ]
  },
  {
    "patternId": "Generic_PHP_LowerCaseConstant",
    "title": "Lowercase PHP Constants",
    "description": "The <em>true</em>, <em>false</em> and <em>null</em> constants must always be lowercase.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_LowerCaseKeyword",
    "title": "Lowercase Keywords",
    "description": "All PHP keywords should be lowercase.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_LowerCaseType",
    "title": "Lowercase PHP Types",
    "description": "All PHP types used for parameter type and return type declarations should be lowercase.",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_NoSilencedErrors",
    "title": "Silenced Errors",
    "description": "Suppressing Errors is not allowed.",
    "parameters": [
      {
        "name": "error",
        "description": "error"
      }
    ]
  },
  {
    "patternId": "Generic_PHP_RequireStrictTypes",
    "title": "PHP: Require Strict Types",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_SAPIUsage",
    "title": "SAPI Usage",
    "description": "The PHP_SAPI constant should be used instead of php_sapi_name().",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_Syntax",
    "title": "PHP: Syntax",
    "parameters": []
  },
  {
    "patternId": "Generic_PHP_UpperCaseConstant",
    "title": "Uppercase PHP Constants",
    "description": "The <em>true</em>, <em>false</em> and <em>null</em> constants must always be uppercase.",
    "parameters": []
  },
  {
    "patternId": "Generic_Strings_UnnecessaryStringConcat",
    "title": "Unnecessary String Concatenation",
    "description": "Strings should not be concatenated together.",
    "parameters": [
      {
        "name": "error",
        "description": "error"
      },
      {
        "name": "allowMultiline",
        "description": "allowMultiline"
      }
    ]
  },
  {
    "patternId": "Generic_VersionControl_GitMergeConflict",
    "title": "Version Control: Git Merge Conflict",
    "parameters": []
  },
  {
    "patternId": "Generic_VersionControl_SubversionProperties",
    "title": "Subversion Properties",
    "description": "All php files in a subversion repository should have the svn:keywords property set to 'Author Id Revision' and the svn:eol-style property set to 'native'.",
    "parameters": []
  },
  {
    "patternId": "Generic_WhiteSpace_ArbitraryParenthesesSpacing",
    "title": "Arbitrary Parentheses Spacing",
    "description": "Arbitrary sets of parentheses should have no spaces inside.",
    "parameters": [
      {
        "name": "spacing",
        "description": "spacing"
      },
      {
        "name": "ignoreNewlines",
        "description": "ignoreNewlines"
      }
    ]
  },
  {
    "patternId": "Generic_WhiteSpace_DisallowSpaceIndent",
    "title": "No Space Indentation",
    "description": "Tabs should be used for indentation instead of spaces.",
    "parameters": []
  },
  {
    "patternId": "Generic_WhiteSpace_DisallowTabIndent",
    "title": "No Tab Indentation",
    "description": "Spaces should be used for indentation instead of tabs.",
    "parameters": []
  },
  {
    "patternId": "Generic_WhiteSpace_IncrementDecrementSpacing",
    "title": "White Space: Increment Decrement Spacing",
    "parameters": []
  },
  {
    "patternId": "Generic_WhiteSpace_LanguageConstructSpacing",
    "title": "White Space: Language Construct Spacing",
    "parameters": []
  },
  {
    "patternId": "Generic_WhiteSpace_ScopeIndent",
    "title": "Scope Indentation",
    "description": "Indentation for control structures, classes, and functions should be 4 spaces per level.",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      },
      {
        "name": "exact",
        "description": "exact"
      },
      {
        "name": "tabIndent",
        "description": "tabIndent"
      }
    ]
  },
  {
    "patternId": "Generic_WhiteSpace_SpreadOperatorSpacingAfter",
    "title": "Spacing After Spread Operator",
    "description": "There should be no space between the spread operator and the variable/function call it applies to.",
    "parameters": [
      {
        "name": "spacing",
        "description": "spacing"
      },
      {
        "name": "ignoreNewlines",
        "description": "ignoreNewlines"
      }
    ]
  },
  {
    "patternId": "MEQP1_Classes_Mysql4",
    "title": "Classes: Mysql4",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Classes_ObjectInstantiation",
    "title": "Classes: Object Instantiation",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Classes_ResourceModel",
    "title": "Classes: Resource Model",
    "parameters": []
  },
  {
    "patternId": "MEQP1_CodeAnalysis_EmptyBlock",
    "title": "Code Analysis: Empty Block",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Exceptions_DirectThrow",
    "title": "Exceptions: Direct Throw",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Exceptions_Namespace",
    "title": "Exceptions: Namespace",
    "parameters": []
  },
  {
    "patternId": "MEQP1_PHP_Goto",
    "title": "PHP: Goto",
    "parameters": []
  },
  {
    "patternId": "MEQP1_PHP_PrivateClassMember",
    "title": "PHP: Private Class Member",
    "parameters": []
  },
  {
    "patternId": "MEQP1_PHP_Syntax",
    "title": "PHP: Syntax",
    "parameters": []
  },
  {
    "patternId": "MEQP1_PHP_Var",
    "title": "PHP: Var",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Performance_CollectionCount",
    "title": "Performance: Collection Count",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Performance_EmptyCheck",
    "title": "Performance: Empty Check",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Performance_InefficientMethods",
    "title": "Performance: Inefficient Methods",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Performance_Loop",
    "title": "Performance: Loop",
    "parameters": []
  },
  {
    "patternId": "MEQP1_SQL_MissedIndexes",
    "title": "SQL: Missed Indexes",
    "parameters": []
  },
  {
    "patternId": "MEQP1_SQL_RawQuery",
    "title": "SQL: Raw Query",
    "parameters": []
  },
  {
    "patternId": "MEQP1_SQL_SlowQuery",
    "title": "SQL: Slow Query",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Security_Acl",
    "title": "Security: Acl",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Security_DiscouragedFunction",
    "title": "Security: Discouraged Function",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Security_IncludeFile",
    "title": "Security: Include File",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Security_InsecureFunction",
    "title": "Security: Insecure Function",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Security_LanguageConstruct",
    "title": "Security: Language Construct",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Security_Superglobal",
    "title": "Security: Superglobal",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Stdlib_DateTime",
    "title": "Stdlib: Date Time",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Strings_RegEx",
    "title": "Strings: Reg Ex",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Strings_StringConcat",
    "title": "Strings: String Concat",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Strings_StringPosition",
    "title": "Strings: String Position",
    "parameters": []
  },
  {
    "patternId": "MEQP1_Templates_XssTemplate",
    "title": "Templates: Xss Template",
    "parameters": []
  },
  {
    "patternId": "Magento2_Annotation_MethodAnnotationStructure",
    "title": "Annotation: Method Annotation Structure",
    "parameters": []
  },
  {
    "patternId": "Magento2_Annotation_MethodArguments",
    "title": "Annotation: Method Arguments",
    "parameters": []
  },
  {
    "patternId": "Magento2_Classes_AbstractApi",
    "title": "Classes: Abstract Api",
    "parameters": []
  },
  {
    "patternId": "Magento2_Classes_DiscouragedDependencies",
    "title": "Classes: Discouraged Dependencies",
    "parameters": []
  },
  {
    "patternId": "Magento2_CodeAnalysis_EmptyBlock",
    "title": "Code Analysis: Empty Block",
    "parameters": []
  },
  {
    "patternId": "Magento2_Commenting_ClassAndInterfacePHPDocFormatting",
    "title": "Commenting: Class And Interface PHP Doc Formatting",
    "parameters": []
  },
  {
    "patternId": "Magento2_Commenting_ClassPropertyPHPDocFormatting",
    "title": "Commenting: Class Property PHP Doc Formatting",
    "parameters": []
  },
  {
    "patternId": "Magento2_Commenting_ConstantsPHPDocFormatting",
    "title": "Commenting: Constants PHP Doc Formatting",
    "parameters": []
  },
  {
    "patternId": "Magento2_Exceptions_DirectThrow",
    "title": "Exceptions: Direct Throw",
    "parameters": []
  },
  {
    "patternId": "Magento2_Exceptions_ThrowCatch",
    "title": "Exceptions: Throw Catch",
    "parameters": []
  },
  {
    "patternId": "Magento2_Exceptions_TryProcessSystemResources",
    "title": "Exceptions: Try Process System Resources",
    "parameters": []
  },
  {
    "patternId": "Magento2_Functions_DiscouragedFunction",
    "title": "Functions: Discouraged Function",
    "parameters": [
      {
        "name": "error",
        "description": "error"
      }
    ]
  },
  {
    "patternId": "Magento2_Functions_FunctionsDeprecatedWithoutArgument",
    "title": "Functions: Functions Deprecated Without Argument",
    "parameters": []
  },
  {
    "patternId": "Magento2_Functions_StaticFunction",
    "title": "Functions: Static Function",
    "parameters": []
  },
  {
    "patternId": "Magento2_GraphQL_AbstractGraphQL",
    "title": "Graph QL: Abstract Graph QL",
    "parameters": []
  },
  {
    "patternId": "Magento2_GraphQL_ValidArgumentName",
    "title": "Graph QL: Valid Argument Name",
    "parameters": []
  },
  {
    "patternId": "Magento2_GraphQL_ValidEnumValue",
    "title": "Graph QL: Valid Enum Value",
    "parameters": []
  },
  {
    "patternId": "Magento2_GraphQL_ValidFieldName",
    "title": "Graph QL: Valid Field Name",
    "parameters": []
  },
  {
    "patternId": "Magento2_GraphQL_ValidTopLevelFieldName",
    "title": "Graph QL: Valid Top Level Field Name",
    "parameters": []
  },
  {
    "patternId": "Magento2_GraphQL_ValidTypeName",
    "title": "Graph QL: Valid Type Name",
    "parameters": []
  },
  {
    "patternId": "Magento2_Html_HtmlBinding",
    "title": "Html: Html Binding",
    "parameters": []
  },
  {
    "patternId": "Magento2_Html_HtmlClosingVoidTags",
    "title": "Html: Html Closing Void Tags",
    "parameters": []
  },
  {
    "patternId": "Magento2_Html_HtmlCollapsibleAttribute",
    "title": "Html: Html Collapsible Attribute",
    "parameters": []
  },
  {
    "patternId": "Magento2_Html_HtmlDirective",
    "title": "Html: Html Directive",
    "parameters": []
  },
  {
    "patternId": "Magento2_Html_HtmlSelfClosingTags",
    "title": "Html: Html Self Closing Tags",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_AbstractBlock",
    "title": "Legacy: Abstract Block",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_ClassReferencesInConfigurationFiles",
    "title": "Legacy: Class References In Configuration Files",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_DiConfig",
    "title": "Legacy: Di Config",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_EmailTemplate",
    "title": "Legacy: Email Template",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_EscapeMethodsOnBlockClass",
    "title": "Legacy: Escape Methods On Block Class",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_InstallUpgrade",
    "title": "Legacy: Install Upgrade",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_Layout",
    "title": "Legacy: Layout",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_MageEntity",
    "title": "Legacy: Mage Entity",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_ModuleXML",
    "title": "Legacy: Module XML",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_ObsoleteAcl",
    "title": "Legacy: Obsolete Acl",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_ObsoleteConfigNodes",
    "title": "Legacy: Obsolete Config Nodes",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_ObsoleteConnection",
    "title": "Legacy: Obsolete Connection",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_ObsoleteMenu",
    "title": "Legacy: Obsolete Menu",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_ObsoleteSystemConfiguration",
    "title": "Legacy: Obsolete System Configuration",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_PhtmlTemplate",
    "title": "Legacy: Phtml Template",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_RestrictedCode",
    "title": "Legacy: Restricted Code",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_TableName",
    "title": "Legacy: Table Name",
    "parameters": []
  },
  {
    "patternId": "Magento2_Legacy_WidgetXML",
    "title": "Legacy: Widget XML",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_AvoidId",
    "title": "Less: Avoid Id",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_BracesFormatting",
    "title": "Less: Braces Formatting",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_ClassNaming",
    "title": "Less: Class Naming",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_ColonSpacing",
    "title": "Less: Colon Spacing",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_ColourDefinition",
    "title": "Less: Colour Definition",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_CombinatorIndentation",
    "title": "Less: Combinator Indentation",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_CommentLevels",
    "title": "Less: Comment Levels",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_ImportantProperty",
    "title": "Less: Important Property",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_Indentation",
    "title": "Less: Indentation",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      },
      {
        "name": "maxIndentLevel",
        "description": "maxIndentLevel"
      }
    ]
  },
  {
    "patternId": "Magento2_Less_PropertiesLineBreak",
    "title": "Less: Properties Line Break",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_PropertiesSorting",
    "title": "Less: Properties Sorting",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_Quotes",
    "title": "Less: Quotes",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_SelectorDelimiter",
    "title": "Less: Selector Delimiter",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_SemicolonSpacing",
    "title": "Less: Semicolon Spacing",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_TypeSelectorConcatenation",
    "title": "Less: Type Selector Concatenation",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_TypeSelectors",
    "title": "Less: Type Selectors",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_Variables",
    "title": "Less: Variables",
    "parameters": []
  },
  {
    "patternId": "Magento2_Less_ZeroUnits",
    "title": "Less: Zero Units",
    "parameters": []
  },
  {
    "patternId": "Magento2_Methods_DeprecatedModelMethod",
    "title": "Methods: Deprecated Model Method",
    "parameters": []
  },
  {
    "patternId": "Magento2_Namespaces_ImportsFromTestNamespace",
    "title": "Namespaces: Imports From Test Namespace",
    "parameters": []
  },
  {
    "patternId": "Magento2_NamingConvention_InterfaceName",
    "title": "Naming Convention: Interface Name",
    "parameters": []
  },
  {
    "patternId": "Magento2_NamingConvention_ReservedWords",
    "title": "Naming Convention: Reserved Words",
    "parameters": []
  },
  {
    "patternId": "Magento2_PHP_ArrayAutovivification",
    "title": "PHP: Array Autovivification",
    "parameters": []
  },
  {
    "patternId": "Magento2_PHP_AutogeneratedClassNotInConstructor",
    "title": "PHP: Autogenerated Class Not In Constructor",
    "parameters": []
  },
  {
    "patternId": "Magento2_PHP_FinalImplementation",
    "title": "PHP: Final Implementation",
    "parameters": []
  },
  {
    "patternId": "Magento2_PHP_Goto",
    "title": "PHP: Goto",
    "parameters": []
  },
  {
    "patternId": "Magento2_PHP_LiteralNamespaces",
    "title": "PHP: Literal Namespaces",
    "parameters": []
  },
  {
    "patternId": "Magento2_PHP_ReturnValueCheck",
    "title": "PHP: Return Value Check",
    "parameters": []
  },
  {
    "patternId": "Magento2_PHP_ShortEchoSyntax",
    "title": "PHP: Short Echo Syntax",
    "parameters": []
  },
  {
    "patternId": "Magento2_PHP_Var",
    "title": "PHP: Var",
    "parameters": []
  },
  {
    "patternId": "Magento2_Performance_ForeachArrayMerge",
    "title": "Performance: Foreach Array Merge",
    "parameters": []
  },
  {
    "patternId": "Magento2_SQL_RawQuery",
    "title": "SQL: Raw Query",
    "parameters": []
  },
  {
    "patternId": "Magento2_Security_IncludeFile",
    "title": "Security: Include File",
    "parameters": []
  },
  {
    "patternId": "Magento2_Security_InsecureFunction",
    "title": "Security: Insecure Function",
    "parameters": []
  },
  {
    "patternId": "Magento2_Security_LanguageConstruct",
    "title": "Security: Language Construct",
    "parameters": []
  },
  {
    "patternId": "Magento2_Security_Superglobal",
    "title": "Security: Superglobal",
    "parameters": []
  },
  {
    "patternId": "Magento2_Security_XssTemplate",
    "title": "Security: Xss Template",
    "parameters": []
  },
  {
    "patternId": "Magento2_Strings_ExecutableRegEx",
    "title": "Strings: Executable Reg Ex",
    "parameters": []
  },
  {
    "patternId": "Magento2_Strings_StringConcat",
    "title": "Strings: String Concat",
    "parameters": []
  },
  {
    "patternId": "Magento2_Templates_ThisInTemplate",
    "title": "Templates: This In Template",
    "parameters": []
  },
  {
    "patternId": "Magento2_Translation_ConstantUsage",
    "title": "Translation: Constant Usage",
    "parameters": []
  },
  {
    "patternId": "Magento2_Whitespace_MultipleEmptyLines",
    "title": "Whitespace: Multiple Empty Lines",
    "parameters": []
  },
  {
    "patternId": "MySource_CSS_BrowserSpecificStyles",
    "title": "CSS: Browser Specific Styles",
    "parameters": []
  },
  {
    "patternId": "MySource_Channels_DisallowSelfActions",
    "title": "Channels: Disallow Self Actions",
    "parameters": []
  },
  {
    "patternId": "MySource_Channels_IncludeOwnSystem",
    "title": "Channels: Include Own System",
    "parameters": []
  },
  {
    "patternId": "MySource_Channels_IncludeSystem",
    "title": "Channels: Include System",
    "parameters": []
  },
  {
    "patternId": "MySource_Channels_UnusedSystem",
    "title": "Channels: Unused System",
    "parameters": []
  },
  {
    "patternId": "MySource_Commenting_FunctionComment",
    "title": "Commenting: Function Comment",
    "parameters": []
  },
  {
    "patternId": "MySource_Debug_DebugCode",
    "title": "Debug: Debug Code",
    "parameters": []
  },
  {
    "patternId": "MySource_Debug_FirebugConsole",
    "title": "Debug: Firebug Console",
    "parameters": []
  },
  {
    "patternId": "MySource_Objects_AssignThis",
    "title": "Objects: Assign This",
    "parameters": []
  },
  {
    "patternId": "MySource_Objects_CreateWidgetTypeCallback",
    "title": "Objects: Create Widget Type Callback",
    "parameters": []
  },
  {
    "patternId": "MySource_Objects_DisallowNewWidget",
    "title": "Objects: Disallow New Widget",
    "parameters": []
  },
  {
    "patternId": "MySource_PHP_AjaxNullComparison",
    "title": "PHP: Ajax Null Comparison",
    "parameters": []
  },
  {
    "patternId": "MySource_PHP_EvalObjectFactory",
    "title": "PHP: Eval Object Factory",
    "parameters": []
  },
  {
    "patternId": "MySource_PHP_GetRequestData",
    "title": "PHP: Get Request Data",
    "parameters": []
  },
  {
    "patternId": "MySource_PHP_ReturnFunctionValue",
    "title": "PHP: Return Function Value",
    "parameters": []
  },
  {
    "patternId": "MySource_Strings_JoinStrings",
    "title": "Strings: Join Strings",
    "parameters": []
  },
  {
    "patternId": "PEAR_Classes_ClassDeclaration",
    "title": "Class Declarations",
    "description": "The opening brace of a class must be on the line after the definition by itself.",
    "parameters": []
  },
  {
    "patternId": "PEAR_Commenting_ClassComment",
    "title": "Class Comments",
    "description": "Classes and interfaces must have a non-empty doc comment.  The short description must be on the second line of the comment.  Each description must have one blank comment line before and after.  There must be one blank line before the tags in the comments.  A @version tag must be in Release: package_version format.",
    "parameters": []
  },
  {
    "patternId": "PEAR_Commenting_FileComment",
    "title": "File Comments",
    "description": "Files must have a non-empty doc comment.  The short description must be on the second line of the comment.  Each description must have one blank comment line before and after.  There must be one blank line before the tags in the comments.  There must be a category, package, author, license, and link tag.  There may only be one category, package, subpackage, license, version, since and deprecated tag",
    "parameters": []
  },
  {
    "patternId": "PEAR_Commenting_FunctionComment",
    "title": "Function Comments",
    "description": "Functions must have a non-empty doc comment.  The short description must be on the second line of the comment.  Each description must have one blank comment line before and after.  There must be one blank line before the tags in the comments.  There must be a tag for each of the parameters in the right order with the right variable names with a comment.  There must be a return tag.  Any throw tag must have an exception class.",
    "parameters": [
      {
        "name": "minimumVisibility",
        "description": "minimumVisibility"
      }
    ]
  },
  {
    "patternId": "PEAR_Commenting_InlineComment",
    "title": "Inline Comments",
    "description": "Perl-style # comments are not allowed.",
    "parameters": []
  },
  {
    "patternId": "PEAR_ControlStructures_ControlSignature",
    "title": "Control Structure Signatures",
    "description": "Control structures should use one space around the parentheses in conditions.  The opening brace should be preceded by one space and should be at the end of the line.",
    "parameters": [
      {
        "name": "ignoreComments",
        "description": "ignoreComments"
      }
    ]
  },
  {
    "patternId": "PEAR_ControlStructures_MultiLineCondition",
    "title": "Multi-line If Conditions",
    "description": "Multi-line if conditions should be indented one level and each line should begin with a boolean operator.  The end parenthesis should be on a new line.",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "PEAR_Files_IncludingFile",
    "title": "Including Code",
    "description": "Anywhere you are unconditionally including a class file, use <em>require_once</em>. Anywhere you are conditionally including a class file (for example, factory methods), use <em>include_once</em>. Either of these will ensure that class files are included only once. They share the same file list, so you don't need to worry about mixing them - a file included with <em>require_once</em> will not be included again by <em>include_once</em>.",
    "parameters": []
  },
  {
    "patternId": "PEAR_Formatting_MultiLineAssignment",
    "title": "Multi-Line Assignment",
    "description": "Multi-line assignment should have the equals sign be the first item on the second line indented correctly.",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "PEAR_Functions_FunctionCallSignature",
    "title": "Function Calls",
    "description": "Functions should be called with no spaces between the function name, the opening parenthesis, and the first parameter; and no space between the last parameter, the closing parenthesis, and the semicolon.",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      },
      {
        "name": "allowMultipleArguments",
        "description": "allowMultipleArguments"
      },
      {
        "name": "requiredSpacesAfterOpen",
        "description": "requiredSpacesAfterOpen"
      },
      {
        "name": "requiredSpacesBeforeClose",
        "description": "requiredSpacesBeforeClose"
      }
    ]
  },
  {
    "patternId": "PEAR_Functions_FunctionDeclaration",
    "title": "Function Declarations",
    "description": "There should be exactly 1 space after the function keyword and 1 space on each side of the use keyword.  Closures should use the Kernighan/Ritchie Brace style and other single-line functions should use the BSD/Allman style.  Multi-line function declarations should have the parameter lists indented one level with the closing parenthesis on a newline followed by a single space and the opening brace of the function.",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "PEAR_Functions_ValidDefaultValue",
    "title": "Default Values in Function Declarations",
    "description": "Arguments with default values go at the end of the argument list.",
    "parameters": []
  },
  {
    "patternId": "PEAR_NamingConventions_ValidClassName",
    "title": "Class Names",
    "description": "Classes should be given descriptive names. Avoid using abbreviations where possible. Class names should always begin with an uppercase letter. The PEAR class hierarchy is also reflected in the class name, each level of the hierarchy separated with a single underscore.",
    "parameters": []
  },
  {
    "patternId": "PEAR_NamingConventions_ValidFunctionName",
    "title": "Function and Method Names",
    "description": "Functions and methods should be named using the \"studly caps\" style (also referred to as \"bumpy case\" or \"camel caps\"). Functions should in addition have the package name as a prefix, to avoid name collisions between packages. The initial letter of the name (after the prefix) is lowercase, and each letter that starts a new \"word\" is capitalized.",
    "parameters": []
  },
  {
    "patternId": "PEAR_NamingConventions_ValidVariableName",
    "title": "Variable Names",
    "description": "Private member variable names should be prefixed with an underscore and public/protected variable names should not.",
    "parameters": []
  },
  {
    "patternId": "PEAR_WhiteSpace_ObjectOperatorIndent",
    "title": "Object Operator Indentation",
    "description": "Chained object operators when spread out over multiple lines should be the first thing on the line and be indented by 1 level.",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      },
      {
        "name": "multilevel",
        "description": "multilevel"
      }
    ]
  },
  {
    "patternId": "PEAR_WhiteSpace_ScopeClosingBrace",
    "title": "Closing Brace Indentation",
    "description": "Closing braces should be indented at the same level as the beginning of the scope.",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "PEAR_WhiteSpace_ScopeIndent",
    "title": "Scope Indentation",
    "description": "Any scope openers except for switch statements should be indented 1 level.  This includes classes, functions, and control structures.",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Attributes_NewAttributes",
    "title": "PHP Compatibility related issue (Attributes): New Attributes",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_ForbiddenExtendingFinalPHPClass",
    "title": "PHP Compatibility related issue (Classes): Forbidden Extending Final PHP Class",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_NewAnonymousClasses",
    "title": "PHP Compatibility related issue (Classes): New Anonymous Classes",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_NewClasses",
    "title": "PHP Compatibility related issue (Classes): New Classes",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_NewConstVisibility",
    "title": "PHP Compatibility related issue (Classes): New Const Visibility",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_NewConstructorPropertyPromotion",
    "title": "PHP Compatibility related issue (Classes): New Constructor Property Promotion",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_NewFinalConstants",
    "title": "PHP Compatibility related issue (Classes): New Final Constants",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_NewLateStaticBinding",
    "title": "PHP Compatibility related issue (Classes): New Late Static Binding",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_NewReadonlyClasses",
    "title": "PHP Compatibility related issue (Classes): New Readonly Classes",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_NewReadonlyProperties",
    "title": "PHP Compatibility related issue (Classes): New Readonly Properties",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_NewTypedProperties",
    "title": "PHP Compatibility related issue (Classes): New Typed Properties",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_RemovedClasses",
    "title": "PHP Compatibility related issue (Classes): Removed Classes",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Classes_RemovedOrphanedParent",
    "title": "PHP Compatibility related issue (Classes): Removed Orphaned Parent",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Constants_NewConstants",
    "title": "PHP Compatibility related issue (Constants): New Constants",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Constants_NewConstantsInTraits",
    "title": "PHP Compatibility related issue (Constants): New Constants In Traits",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Constants_NewMagicClassConstant",
    "title": "PHP Compatibility related issue (Constants): New Magic Class Constant",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Constants_RemovedConstants",
    "title": "PHP Compatibility related issue (Constants): Removed Constants",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ControlStructures_DiscouragedSwitchContinue",
    "title": "PHP Compatibility related issue (Control Structures): Discouraged Switch Continue",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ControlStructures_ForbiddenBreakContinueOutsideLoop",
    "title": "PHP Compatibility related issue (Control Structures): Forbidden Break Continue Outside Loop",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ControlStructures_ForbiddenBreakContinueVariableArguments",
    "title": "PHP Compatibility related issue (Control Structures): Forbidden Break Continue Variable Arguments",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ControlStructures_ForbiddenSwitchWithMultipleDefaultBlocks",
    "title": "PHP Compatibility related issue (Control Structures): Forbidden Switch With Multiple Default Blocks",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ControlStructures_NewExecutionDirectives",
    "title": "PHP Compatibility related issue (Control Structures): New Execution Directives",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ControlStructures_NewForeachExpressionReferencing",
    "title": "PHP Compatibility related issue (Control Structures): New Foreach Expression Referencing",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ControlStructures_NewListInForeach",
    "title": "PHP Compatibility related issue (Control Structures): New List In Foreach",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ControlStructures_NewMultiCatch",
    "title": "PHP Compatibility related issue (Control Structures): New Multi Catch",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ControlStructures_NewNonCapturingCatch",
    "title": "PHP Compatibility related issue (Control Structures): New Non Capturing Catch",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Extensions_RemovedExtensions",
    "title": "PHP Compatibility related issue (Extensions): Removed Extensions",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_AbstractPrivateMethods",
    "title": "PHP Compatibility related issue (Function Declarations): Abstract Private Methods",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_ForbiddenFinalPrivateMethods",
    "title": "PHP Compatibility related issue (Function Declarations): Forbidden Final Private Methods",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_ForbiddenParameterShadowSuperGlobals",
    "title": "PHP Compatibility related issue (Function Declarations): Forbidden Parameter Shadow Super Globals",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_ForbiddenParametersWithSameName",
    "title": "PHP Compatibility related issue (Function Declarations): Forbidden Parameters With Same Name",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_ForbiddenToStringParameters",
    "title": "PHP Compatibility related issue (Function Declarations): Forbidden To String Parameters",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_ForbiddenVariableNamesInClosureUse",
    "title": "PHP Compatibility related issue (Function Declarations): Forbidden Variable Names In Closure Use",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_NewClosure",
    "title": "PHP Compatibility related issue (Function Declarations): New Closure",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_NewExceptionsFromToString",
    "title": "PHP Compatibility related issue (Function Declarations): New Exceptions From To String",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_NewNullableTypes",
    "title": "PHP Compatibility related issue (Function Declarations): New Nullable Types",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_NewParamTypeDeclarations",
    "title": "PHP Compatibility related issue (Function Declarations): New Param Type Declarations",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_NewReturnTypeDeclarations",
    "title": "PHP Compatibility related issue (Function Declarations): New Return Type Declarations",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_NewTrailingComma",
    "title": "PHP Compatibility related issue (Function Declarations): New Trailing Comma",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_NonStaticMagicMethods",
    "title": "PHP Compatibility related issue (Function Declarations): Non Static Magic Methods",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_RemovedCallingDestructAfterConstructorExit",
    "title": "PHP Compatibility related issue (Function Declarations): Removed Calling Destruct After Constructor Exit",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_RemovedImplicitlyNullableParam",
    "title": "PHP Compatibility related issue (Function Declarations): Removed Implicitly Nullable Param",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_RemovedOptionalBeforeRequiredParam",
    "title": "PHP Compatibility related issue (Function Declarations): Removed Optional Before Required Param",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionDeclarations_RemovedReturnByReferenceFromVoid",
    "title": "PHP Compatibility related issue (Function Declarations): Removed Return By Reference From Void",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionNameRestrictions_NewMagicMethods",
    "title": "PHP Compatibility related issue (Function Name Restrictions): New Magic Methods",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionNameRestrictions_RemovedMagicAutoload",
    "title": "PHP Compatibility related issue (Function Name Restrictions): Removed Magic Autoload",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionNameRestrictions_RemovedNamespacedAssert",
    "title": "PHP Compatibility related issue (Function Name Restrictions): Removed Namespaced Assert",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionNameRestrictions_RemovedPHP4StyleConstructors",
    "title": "PHP Compatibility related issue (Function Name Restrictions): Removed PHP4 Style Constructors",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionNameRestrictions_ReservedFunctionNames",
    "title": "PHP Compatibility related issue (Function Name Restrictions): Reserved Function Names",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionUse_ArgumentFunctionsReportCurrentValue",
    "title": "PHP Compatibility related issue (Function Use): Argument Functions Report Current Value",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionUse_ArgumentFunctionsUsage",
    "title": "PHP Compatibility related issue (Function Use): Argument Functions Usage",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionUse_NewFunctionParameters",
    "title": "PHP Compatibility related issue (Function Use): New Function Parameters",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionUse_NewFunctions",
    "title": "PHP Compatibility related issue (Function Use): New Functions",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionUse_NewNamedParameters",
    "title": "PHP Compatibility related issue (Function Use): New Named Parameters",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionUse_OptionalToRequiredFunctionParameters",
    "title": "PHP Compatibility related issue (Function Use): Optional To Required Function Parameters",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionUse_RemovedFunctionParameters",
    "title": "PHP Compatibility related issue (Function Use): Removed Function Parameters",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionUse_RemovedFunctions",
    "title": "PHP Compatibility related issue (Function Use): Removed Functions",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_FunctionUse_RequiredToOptionalFunctionParameters",
    "title": "PHP Compatibility related issue (Function Use): Required To Optional Function Parameters",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Generators_NewGeneratorReturn",
    "title": "PHP Compatibility related issue (Generators): New Generator Return",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_IniDirectives_NewIniDirectives",
    "title": "PHP Compatibility related issue (Ini Directives): New Ini Directives",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_IniDirectives_RemovedIniDirectives",
    "title": "PHP Compatibility related issue (Ini Directives): Removed Ini Directives",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_InitialValue_NewConstantArraysUsingConst",
    "title": "PHP Compatibility related issue (Initial Value): New Constant Arrays Using Const",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_InitialValue_NewConstantArraysUsingDefine",
    "title": "PHP Compatibility related issue (Initial Value): New Constant Arrays Using Define",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_InitialValue_NewConstantScalarExpressions",
    "title": "PHP Compatibility related issue (Initial Value): New Constant Scalar Expressions",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_InitialValue_NewHeredoc",
    "title": "PHP Compatibility related issue (Initial Value): New Heredoc",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_InitialValue_NewNewInDefine",
    "title": "PHP Compatibility related issue (Initial Value): New New In Define",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_InitialValue_NewNewInInitializers",
    "title": "PHP Compatibility related issue (Initial Value): New New In Initializers",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Interfaces_InternalInterfaces",
    "title": "PHP Compatibility related issue (Interfaces): Internal Interfaces",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Interfaces_NewInterfaces",
    "title": "PHP Compatibility related issue (Interfaces): New Interfaces",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Interfaces_RemovedSerializable",
    "title": "PHP Compatibility related issue (Interfaces): Removed Serializable",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Keywords_CaseSensitiveKeywords",
    "title": "PHP Compatibility related issue (Keywords): Case Sensitive Keywords",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Keywords_ForbiddenNames",
    "title": "PHP Compatibility related issue (Keywords): Forbidden Names",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Keywords_NewKeywords",
    "title": "PHP Compatibility related issue (Keywords): New Keywords",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_LanguageConstructs_NewEmptyNonVariable",
    "title": "PHP Compatibility related issue (Language Constructs): New Empty Non Variable",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_LanguageConstructs_NewLanguageConstructs",
    "title": "PHP Compatibility related issue (Language Constructs): New Language Constructs",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Lists_AssignmentOrder",
    "title": "PHP Compatibility related issue (Lists): Assignment Order",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Lists_ForbiddenEmptyListAssignment",
    "title": "PHP Compatibility related issue (Lists): Forbidden Empty List Assignment",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Lists_NewKeyedList",
    "title": "PHP Compatibility related issue (Lists): New Keyed List",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Lists_NewListReferenceAssignment",
    "title": "PHP Compatibility related issue (Lists): New List Reference Assignment",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Lists_NewShortList",
    "title": "PHP Compatibility related issue (Lists): New Short List",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_MethodUse_ForbiddenToStringParameters",
    "title": "PHP Compatibility related issue (Method Use): Forbidden To String Parameters",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_MethodUse_NewDirectCallsToClone",
    "title": "PHP Compatibility related issue (Method Use): New Direct Calls To Clone",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Miscellaneous_NewPHPOpenTagEOF",
    "title": "PHP Compatibility related issue (Miscellaneous): New PHP Open Tag EOF",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Miscellaneous_RemovedAlternativePHPTags",
    "title": "PHP Compatibility related issue (Miscellaneous): Removed Alternative PHP Tags",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Namespaces_ReservedNames",
    "title": "PHP Compatibility related issue (Namespaces): Reserved Names",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Numbers_NewExplicitOctalNotation",
    "title": "PHP Compatibility related issue (Numbers): New Explicit Octal Notation",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Numbers_NewNumericLiteralSeparator",
    "title": "PHP Compatibility related issue (Numbers): New Numeric Literal Separator",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Numbers_RemovedHexadecimalNumericStrings",
    "title": "PHP Compatibility related issue (Numbers): Removed Hexadecimal Numeric Strings",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Numbers_ValidIntegers",
    "title": "PHP Compatibility related issue (Numbers): Valid Integers",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Operators_ChangedConcatOperatorPrecedence",
    "title": "PHP Compatibility related issue (Operators): Changed Concat Operator Precedence",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Operators_ForbiddenNegativeBitshift",
    "title": "PHP Compatibility related issue (Operators): Forbidden Negative Bitshift",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Operators_NewOperators",
    "title": "PHP Compatibility related issue (Operators): New Operators",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Operators_NewShortTernary",
    "title": "PHP Compatibility related issue (Operators): New Short Ternary",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Operators_RemovedTernaryAssociativity",
    "title": "PHP Compatibility related issue (Operators): Removed Ternary Associativity",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_ChangedIntToBoolParamType",
    "title": "PHP Compatibility related issue (Parameter Values): Changed Int To Bool Param Type",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_ChangedObStartEraseFlags",
    "title": "PHP Compatibility related issue (Parameter Values): Changed Ob Start Erase Flags",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_ForbiddenGetClassNoArgsOutsideOO",
    "title": "PHP Compatibility related issue (Parameter Values): Forbidden Get Class No Args Outside OO",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_ForbiddenGetClassNull",
    "title": "PHP Compatibility related issue (Parameter Values): Forbidden Get Class Null",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_ForbiddenSessionModuleNameUser",
    "title": "PHP Compatibility related issue (Parameter Values): Forbidden Session Module Name User",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_ForbiddenStripTagsSelfClosingXHTML",
    "title": "PHP Compatibility related issue (Parameter Values): Forbidden Strip Tags Self Closing XHTML",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewArrayMergeRecursiveWithGlobalsVar",
    "title": "PHP Compatibility related issue (Parameter Values): New Array Merge Recursive With Globals Var",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewArrayReduceInitialType",
    "title": "PHP Compatibility related issue (Parameter Values): New Array Reduce Initial Type",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewAssertCustomException",
    "title": "PHP Compatibility related issue (Parameter Values): New Assert Custom Exception",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewFopenModes",
    "title": "PHP Compatibility related issue (Parameter Values): New Fopen Modes",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewHTMLEntitiesEncodingDefault",
    "title": "PHP Compatibility related issue (Parameter Values): New HTML Entities Encoding Default",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewHTMLEntitiesFlagsDefault",
    "title": "PHP Compatibility related issue (Parameter Values): New HTML Entities Flags Default",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewHashAlgorithms",
    "title": "PHP Compatibility related issue (Parameter Values): New Hash Algorithms",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewIDNVariantDefault",
    "title": "PHP Compatibility related issue (Parameter Values): New IDN Variant Default",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewIconvMbstringCharsetDefault",
    "title": "PHP Compatibility related issue (Parameter Values): New Iconv Mbstring Charset Default",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewNegativeStringOffset",
    "title": "PHP Compatibility related issue (Parameter Values): New Negative String Offset",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewNumberFormatMultibyteSeparators",
    "title": "PHP Compatibility related issue (Parameter Values): New Number Format Multibyte Separators",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewPCREModifiers",
    "title": "PHP Compatibility related issue (Parameter Values): New PCRE Modifiers",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewPackFormat",
    "title": "PHP Compatibility related issue (Parameter Values): New Pack Format",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewPasswordAlgoConstantValues",
    "title": "PHP Compatibility related issue (Parameter Values): New Password Algo Constant Values",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewProcOpenCmdArray",
    "title": "PHP Compatibility related issue (Parameter Values): New Proc Open Cmd Array",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_NewStripTagsAllowableTagsArray",
    "title": "PHP Compatibility related issue (Parameter Values): New Strip Tags Allowable Tags Array",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedAssertStringAssertion",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Assert String Assertion",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedGetClassNoArgs",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Get Class No Args",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedGetDefinedFunctionsExcludeDisabledFalse",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Get Defined Functions Exclude Disabled False",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedHashAlgorithms",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Hash Algorithms",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedIconvEncoding",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Iconv Encoding",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedImplodeFlexibleParamOrder",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Implode Flexible Param Order",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedLdapConnectSignatures",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Ldap Connect Signatures",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedMbCheckEncodingNoArgs",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Mb Check Encoding No Args",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedMbStrimWidthNegativeWidth",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Mb Strim Width Negative Width",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedMbStrrposEncodingThirdParam",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Mb Strrpos Encoding Third Param",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedMbstringModifiers",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Mbstring Modifiers",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedNonCryptoHash",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Non Crypto Hash",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedPCREModifiers",
    "title": "PHP Compatibility related issue (Parameter Values): Removed PCRE Modifiers",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedSetlocaleString",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Setlocale String",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedSplAutoloadRegisterThrowFalse",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Spl Autoload Register Throw False",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_ParameterValues_RemovedVersionCompareOperators",
    "title": "PHP Compatibility related issue (Parameter Values): Removed Version Compare Operators",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_ForbiddenCallTimePassByReference",
    "title": "PHP Compatibility related issue (Syntax): Forbidden Call Time Pass By Reference",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewArrayStringDereferencing",
    "title": "PHP Compatibility related issue (Syntax): New Array String Dereferencing",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewArrayUnpacking",
    "title": "PHP Compatibility related issue (Syntax): New Array Unpacking",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewClassMemberAccess",
    "title": "PHP Compatibility related issue (Syntax): New Class Member Access",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewDynamicAccessToStatic",
    "title": "PHP Compatibility related issue (Syntax): New Dynamic Access To Static",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewFirstClassCallables",
    "title": "PHP Compatibility related issue (Syntax): New First Class Callables",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewFlexibleHeredocNowdoc",
    "title": "PHP Compatibility related issue (Syntax): New Flexible Heredoc Nowdoc",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewFunctionArrayDereferencing",
    "title": "PHP Compatibility related issue (Syntax): New Function Array Dereferencing",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewFunctionCallTrailingComma",
    "title": "PHP Compatibility related issue (Syntax): New Function Call Trailing Comma",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewInterpolatedStringDereferencing",
    "title": "PHP Compatibility related issue (Syntax): New Interpolated String Dereferencing",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewMagicConstantDereferencing",
    "title": "PHP Compatibility related issue (Syntax): New Magic Constant Dereferencing",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewNestedStaticAccess",
    "title": "PHP Compatibility related issue (Syntax): New Nested Static Access",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_NewShortArray",
    "title": "PHP Compatibility related issue (Syntax): New Short Array",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_RemovedCurlyBraceArrayAccess",
    "title": "PHP Compatibility related issue (Syntax): Removed Curly Brace Array Access",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Syntax_RemovedNewReference",
    "title": "PHP Compatibility related issue (Syntax): Removed New Reference",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_TextStrings_NewUnicodeEscapeSequence",
    "title": "PHP Compatibility related issue (Text Strings): New Unicode Escape Sequence",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_TextStrings_RemovedDollarBraceStringEmbeds",
    "title": "PHP Compatibility related issue (Text Strings): Removed Dollar Brace String Embeds",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_TypeCasts_NewTypeCasts",
    "title": "PHP Compatibility related issue (Type Casts): New Type Casts",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_TypeCasts_RemovedTypeCasts",
    "title": "PHP Compatibility related issue (Type Casts): Removed Type Casts",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Upgrade_LowPHP",
    "title": "PHP Compatibility related issue (Upgrade): Low PHP",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_UseDeclarations_NewGroupUseDeclarations",
    "title": "PHP Compatibility related issue (Use Declarations): New Group Use Declarations",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_UseDeclarations_NewUseConstFunction",
    "title": "PHP Compatibility related issue (Use Declarations): New Use Const Function",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Variables_ForbiddenGlobalVariableVariable",
    "title": "PHP Compatibility related issue (Variables): Forbidden Global Variable Variable",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Variables_ForbiddenThisUseContexts",
    "title": "PHP Compatibility related issue (Variables): Forbidden This Use Contexts",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Variables_NewUniformVariableSyntax",
    "title": "PHP Compatibility related issue (Variables): New Uniform Variable Syntax",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Variables_RemovedIndirectModificationOfGlobals",
    "title": "PHP Compatibility related issue (Variables): Removed Indirect Modification Of Globals",
    "parameters": []
  },
  {
    "patternId": "PHPCompatibility_Variables_RemovedPredefinedGlobalVariables",
    "title": "PHP Compatibility related issue (Variables): Removed Predefined Global Variables",
    "parameters": []
  },
  {
    "patternId": "PSR12_Classes_AnonClassDeclaration",
    "title": "Classes: Anon Class Declaration",
    "parameters": []
  },
  {
    "patternId": "PSR12_Classes_ClassInstantiation",
    "title": "Class Instantiation",
    "description": "When instantiating a new class, parenthesis MUST always be present even when there are no arguments passed to the constructor.",
    "parameters": []
  },
  {
    "patternId": "PSR12_Classes_ClosingBrace",
    "title": "Classes: Closing Brace",
    "parameters": []
  },
  {
    "patternId": "PSR12_Classes_OpeningBraceSpace",
    "title": "Classes: Opening Brace Space",
    "parameters": []
  },
  {
    "patternId": "PSR12_ControlStructures_BooleanOperatorPlacement",
    "title": "Control Structures: Boolean Operator Placement",
    "parameters": [
      {
        "name": "allowOnly",
        "description": "allowOnly"
      }
    ]
  },
  {
    "patternId": "PSR12_ControlStructures_ControlStructureSpacing",
    "title": "Control Structures: Control Structure Spacing",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "PSR12_Files_DeclareStatement",
    "title": "Files: Declare Statement",
    "parameters": []
  },
  {
    "patternId": "PSR12_Files_FileHeader",
    "title": "Files: File Header",
    "parameters": []
  },
  {
    "patternId": "PSR12_Files_ImportStatement",
    "title": "Files: Import Statement",
    "parameters": []
  },
  {
    "patternId": "PSR12_Files_OpenTag",
    "title": "Files: Open Tag",
    "parameters": []
  },
  {
    "patternId": "PSR12_Functions_NullableTypeDeclaration",
    "title": "Nullable Type Declarations Functions",
    "description": "In nullable type declarations there MUST NOT be a space between the question mark and the type.",
    "parameters": []
  },
  {
    "patternId": "PSR12_Functions_ReturnTypeDeclaration",
    "title": "Functions: Return Type Declaration",
    "parameters": []
  },
  {
    "patternId": "PSR12_Keywords_ShortFormTypeKeywords",
    "title": "Short Form Type Keywords",
    "description": "Short form of type keywords MUST be used i.e. bool instead of boolean, int instead of integer etc.",
    "parameters": []
  },
  {
    "patternId": "PSR12_Namespaces_CompoundNamespaceDepth",
    "title": "Compound Namespace Depth",
    "description": "Compound namespaces with a depth of more than two MUST NOT be used.",
    "parameters": [
      {
        "name": "maxDepth",
        "description": "maxDepth"
      }
    ]
  },
  {
    "patternId": "PSR12_Operators_OperatorSpacing",
    "title": "Operator Spacing",
    "description": "All binary and ternary (but not unary) operators MUST be preceded and followed by at least one space. This includes all arithmetic, comparison, assignment, bitwise, logical (excluding ! which is unary), string concatenation, type operators, trait operators (insteadof and as), and the single pipe operator (e.g. ExceptionType1 | ExceptionType2 $e).",
    "parameters": []
  },
  {
    "patternId": "PSR12_Properties_ConstantVisibility",
    "title": "Properties: Constant Visibility",
    "parameters": []
  },
  {
    "patternId": "PSR12_Traits_UseDeclaration",
    "title": "Traits: Use Declaration",
    "parameters": []
  },
  {
    "patternId": "PSR1_Classes_ClassDeclaration",
    "title": "Class Declaration",
    "description": "Each class must be in a file by itself and must be under a namespace (a top-level vendor name).",
    "parameters": []
  },
  {
    "patternId": "PSR1_Files_SideEffects",
    "title": "Side Effects",
    "description": "A php file should either contain declarations with no side effects, or should just have logic (including side effects) with no declarations.",
    "parameters": []
  },
  {
    "patternId": "PSR1_Methods_CamelCapsMethodName",
    "title": "Method Name",
    "description": "Method names MUST be declared in camelCase.",
    "parameters": []
  },
  {
    "patternId": "PSR2_Classes_ClassDeclaration",
    "title": "Class Declarations",
    "description": "There should be exactly 1 space between the abstract or final keyword and the class keyword and between the class keyword and the class name.  The extends and implements keywords, if present, must be on the same line as the class name.  When interfaces implemented are spread over multiple lines, there should be exactly 1 interface mentioned per line indented by 1 level.  The closing brace of the class must go on the first line after the body of the class and must be on a line by itself.",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "PSR2_Classes_PropertyDeclaration",
    "title": "Property Declarations",
    "description": "Property names should not be prefixed with an underscore to indicate visibility.  Visibility should be used to declare properties rather than the var keyword.  Only one property should be declared within a statement.  The static declaration must come after the visibility declaration.",
    "parameters": []
  },
  {
    "patternId": "PSR2_ControlStructures_ControlStructureSpacing",
    "title": "Control Structure Spacing",
    "description": "Control Structures should have 0 spaces after opening parentheses and 0 spaces before closing parentheses.",
    "parameters": [
      {
        "name": "requiredSpacesAfterOpen",
        "description": "requiredSpacesAfterOpen"
      },
      {
        "name": "requiredSpacesBeforeClose",
        "description": "requiredSpacesBeforeClose"
      }
    ]
  },
  {
    "patternId": "PSR2_ControlStructures_ElseIfDeclaration",
    "title": "Elseif Declarations",
    "description": "PHP's elseif keyword should be used instead of else if.",
    "parameters": []
  },
  {
    "patternId": "PSR2_ControlStructures_SwitchDeclaration",
    "title": "Switch Declarations",
    "description": "Case statements should be indented 4 spaces from the switch keyword.  It should also be followed by a space.  Colons in switch declarations should not be preceded by whitespace.  Break statements should be indented 4 more spaces from the case statement.  There must be a comment when falling through from one case into the next.",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "PSR2_Files_ClosingTag",
    "title": "Closing Tag",
    "description": "Checks that the file does not end with a closing tag.",
    "parameters": []
  },
  {
    "patternId": "PSR2_Files_EndFileNewline",
    "title": "End File Newline",
    "description": "PHP Files should end with exactly one newline.",
    "parameters": []
  },
  {
    "patternId": "PSR2_Methods_FunctionCallSignature",
    "title": "Function Call Signature",
    "description": "Checks that the function call format is correct.",
    "parameters": [
      {
        "name": "allowMultipleArguments",
        "description": "allowMultipleArguments"
      }
    ]
  },
  {
    "patternId": "PSR2_Methods_FunctionClosingBrace",
    "title": "Function Closing Brace",
    "description": "Checks that the closing brace of a function goes directly after the body.",
    "parameters": []
  },
  {
    "patternId": "PSR2_Methods_MethodDeclaration",
    "title": "Method Declarations",
    "description": "Method names should not be prefixed with an underscore to indicate visibility.  The static keyword, when present, should come after the visibility declaration, and the final and abstract keywords should come before.",
    "parameters": []
  },
  {
    "patternId": "PSR2_Namespaces_NamespaceDeclaration",
    "title": "Namespace Declarations",
    "description": "There must be one blank line after the namespace declaration.",
    "parameters": []
  },
  {
    "patternId": "PSR2_Namespaces_UseDeclaration",
    "title": "Namespace Declarations",
    "description": "Each use declaration must contain only one namespace and must come after the first namespace declaration.  There should be one blank line after the final use statement.",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_Asserts",
    "title": "Security Bad Functions related issue: Asserts",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_Backticks",
    "title": "Security Bad Functions related issue: Backticks",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_CallbackFunctions",
    "title": "Security Bad Functions related issue: Callback Functions",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_CryptoFunctions",
    "title": "Security Bad Functions related issue: Crypto Functions",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_EasyRFI",
    "title": "Security Bad Functions related issue: Easy RFI",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_EasyXSS",
    "title": "Security Bad Functions related issue: Easy XSS",
    "parameters": [
      {
        "name": "forceParanoia",
        "description": "forceParanoia"
      }
    ]
  },
  {
    "patternId": "Security_BadFunctions_ErrorHandling",
    "title": "Security Bad Functions related issue: Error Handling",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_FilesystemFunctions",
    "title": "Security Bad Functions related issue: Filesystem Functions",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_FringeFunctions",
    "title": "Security Bad Functions related issue: Fringe Functions",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_FunctionHandlingFunctions",
    "title": "Security Bad Functions related issue: Function Handling Functions",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_Mysqli",
    "title": "Security Bad Functions related issue: Mysqli",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_NoEvals",
    "title": "Security Bad Functions related issue: No Evals",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_Phpinfos",
    "title": "Security Bad Functions related issue: Phpinfos",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_PregReplace",
    "title": "Security Bad Functions related issue: Preg Replace",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_SQLFunctions",
    "title": "Security Bad Functions related issue: SQL Functions",
    "parameters": []
  },
  {
    "patternId": "Security_BadFunctions_SystemExecFunctions",
    "title": "Security Bad Functions related issue: System Exec Functions",
    "parameters": []
  },
  {
    "patternId": "Security_CVE_CVE20132110",
    "title": "Security CVE related issue: CVE20132110",
    "parameters": []
  },
  {
    "patternId": "Security_CVE_CVE20134113",
    "title": "Security CVE related issue: CVE20134113",
    "parameters": []
  },
  {
    "patternId": "Security_Drupal7_AESModule",
    "title": "Security Drupal7 related issue: AES Module",
    "parameters": []
  },
  {
    "patternId": "Security_Drupal7_AdvisoriesContrib",
    "title": "Security Drupal7 related issue: Advisories Contrib",
    "parameters": []
  },
  {
    "patternId": "Security_Drupal7_AdvisoriesCore",
    "title": "Security Drupal7 related issue: Advisories Core",
    "parameters": []
  },
  {
    "patternId": "Security_Drupal7_Cachei",
    "title": "Security Drupal7 related issue: Cachei",
    "parameters": []
  },
  {
    "patternId": "Security_Drupal7_DbQueryAC",
    "title": "Security Drupal7 related issue: Db Query AC",
    "parameters": [
      {
        "name": "forceParanoia",
        "description": "forceParanoia"
      }
    ]
  },
  {
    "patternId": "Security_Drupal7_DynQueries",
    "title": "Security Drupal7 related issue: Dyn Queries",
    "parameters": []
  },
  {
    "patternId": "Security_Drupal7_HttpRequest",
    "title": "Security Drupal7 related issue: Http Request",
    "parameters": []
  },
  {
    "patternId": "Security_Drupal7_SQLi",
    "title": "Security Drupal7 related issue: SQ Li",
    "parameters": []
  },
  {
    "patternId": "Security_Drupal7_UserInputWatch",
    "title": "Security Drupal7 related issue: User Input Watch",
    "parameters": [
      {
        "name": "FormThreshold",
        "description": "FormThreshold"
      },
      {
        "name": "FormStateThreshold",
        "description": "FormStateThreshold"
      }
    ]
  },
  {
    "patternId": "Security_Drupal7_XSSFormValue",
    "title": "Security Drupal7 related issue: XSS Form Value",
    "parameters": []
  },
  {
    "patternId": "Security_Drupal7_XSSHTMLConstruct",
    "title": "Security Drupal7 related issue: XSSHTML Construct",
    "parameters": []
  },
  {
    "patternId": "Security_Drupal7_XSSPTheme",
    "title": "Security Drupal7 related issue: XSSP Theme",
    "parameters": []
  },
  {
    "patternId": "Security_Misc_BadCorsHeader",
    "title": "Security Misc related issue: Bad Cors Header",
    "parameters": []
  },
  {
    "patternId": "Security_Misc_IncludeMismatch",
    "title": "Security Misc related issue: Include Mismatch",
    "parameters": []
  },
  {
    "patternId": "Security_Misc_TypeJuggle",
    "title": "Security Misc related issue: Type Juggle",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Arrays_AlphabeticallySortedByKeys",
    "title": "Arrays: Alphabetically Sorted By Keys",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Arrays_ArrayAccess",
    "title": "Arrays: Array Access",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Arrays_DisallowImplicitArrayCreation",
    "title": "Arrays: Disallow Implicit Array Creation",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Arrays_DisallowPartiallyKeyed",
    "title": "Arrays: Disallow Partially Keyed",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Arrays_MultiLineArrayEndBracketPlacement",
    "title": "Arrays: Multi Line Array End Bracket Placement",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Arrays_SingleLineArrayWhitespace",
    "title": "Arrays: Single Line Array Whitespace",
    "parameters": [
      {
        "name": "spacesAroundBrackets",
        "description": "spacesAroundBrackets"
      },
      {
        "name": "enableEmptyArrayCheck",
        "description": "enableEmptyArrayCheck"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Arrays_TrailingArrayComma",
    "title": "Arrays: Trailing Array Comma",
    "parameters": [
      {
        "name": "enableAfterHeredoc",
        "description": "enableAfterHeredoc"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Attributes_AttributeAndTargetSpacing",
    "title": "Attributes: Attribute And Target Spacing",
    "parameters": [
      {
        "name": "linesCount",
        "description": "linesCount"
      },
      {
        "name": "allowOnSameLine",
        "description": "allowOnSameLine"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Attributes_AttributesOrder",
    "title": "Attributes: Attributes Order",
    "parameters": [
      {
        "name": "orderAlphabetically",
        "description": "orderAlphabetically"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Attributes_DisallowAttributesJoining",
    "title": "Attributes: Disallow Attributes Joining",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Attributes_DisallowMultipleAttributesPerLine",
    "title": "Attributes: Disallow Multiple Attributes Per Line",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Attributes_RequireAttributeAfterDocComment",
    "title": "Attributes: Require Attribute After Doc Comment",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_BackedEnumTypeSpacing",
    "title": "Classes: Backed Enum Type Spacing",
    "parameters": [
      {
        "name": "spacesCountBeforeColon",
        "description": "spacesCountBeforeColon"
      },
      {
        "name": "spacesCountBeforeType",
        "description": "spacesCountBeforeType"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_ClassConstantVisibility",
    "title": "Classes: Class Constant Visibility",
    "parameters": [
      {
        "name": "fixable",
        "description": "fixable"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_ClassLength",
    "title": "Classes: Class Length",
    "parameters": [
      {
        "name": "maxLinesLength",
        "description": "maxLinesLength"
      },
      {
        "name": "includeComments",
        "description": "includeComments"
      },
      {
        "name": "includeWhitespace",
        "description": "includeWhitespace"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_ClassMemberSpacing",
    "title": "Classes: Class Member Spacing",
    "parameters": [
      {
        "name": "linesCountBetweenMembers",
        "description": "linesCountBetweenMembers"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_ClassStructure",
    "title": "Classes: Class Structure",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_ConstantSpacing",
    "title": "Classes: Constant Spacing",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_DisallowConstructorPropertyPromotion",
    "title": "Classes: Disallow Constructor Property Promotion",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_DisallowLateStaticBindingForConstants",
    "title": "Classes: Disallow Late Static Binding For Constants",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_DisallowMultiConstantDefinition",
    "title": "Classes: Disallow Multi Constant Definition",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_DisallowMultiPropertyDefinition",
    "title": "Classes: Disallow Multi Property Definition",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_DisallowStringExpressionPropertyFetch",
    "title": "Classes: Disallow String Expression Property Fetch",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_EmptyLinesAroundClassBraces",
    "title": "Classes: Empty Lines Around Class Braces",
    "parameters": [
      {
        "name": "linesCountAfterOpeningBrace",
        "description": "linesCountAfterOpeningBrace"
      },
      {
        "name": "linesCountBeforeClosingBrace",
        "description": "linesCountBeforeClosingBrace"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_EnumCaseSpacing",
    "title": "Classes: Enum Case Spacing",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_ForbiddenPublicProperty",
    "title": "Classes: Forbidden Public Property",
    "parameters": [
      {
        "name": "checkPromoted",
        "description": "checkPromoted"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_MethodSpacing",
    "title": "Classes: Method Spacing",
    "parameters": [
      {
        "name": "minLinesCount",
        "description": "minLinesCount"
      },
      {
        "name": "maxLinesCount",
        "description": "maxLinesCount"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_ModernClassNameReference",
    "title": "Classes: Modern Class Name Reference",
    "parameters": [
      {
        "name": "enableOnObjects",
        "description": "enableOnObjects"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_ParentCallSpacing",
    "title": "Classes: Parent Call Spacing",
    "parameters": [
      {
        "name": "linesCountBefore",
        "description": "linesCountBefore"
      },
      {
        "name": "linesCountBeforeFirst",
        "description": "linesCountBeforeFirst"
      },
      {
        "name": "linesCountAfter",
        "description": "linesCountAfter"
      },
      {
        "name": "linesCountAfterLast",
        "description": "linesCountAfterLast"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_PropertyDeclaration",
    "title": "Classes: Property Declaration",
    "parameters": [
      {
        "name": "checkPromoted",
        "description": "checkPromoted"
      },
      {
        "name": "enableMultipleSpacesBetweenModifiersCheck",
        "description": "enableMultipleSpacesBetweenModifiersCheck"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_PropertySpacing",
    "title": "Classes: Property Spacing",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_RequireAbstractOrFinal",
    "title": "Classes: Require Abstract Or Final",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_RequireConstructorPropertyPromotion",
    "title": "Classes: Require Constructor Property Promotion",
    "parameters": [
      {
        "name": "enable",
        "description": "enable"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_RequireMultiLineMethodSignature",
    "title": "Classes: Require Multi Line Method Signature",
    "parameters": [
      {
        "name": "minLineLength",
        "description": "minLineLength"
      },
      {
        "name": "minParametersCount",
        "description": "minParametersCount"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_RequireSelfReference",
    "title": "Classes: Require Self Reference",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_RequireSingleLineMethodSignature",
    "title": "Classes: Require Single Line Method Signature",
    "parameters": [
      {
        "name": "maxLineLength",
        "description": "maxLineLength"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_SuperfluousAbstractClassNaming",
    "title": "Classes: Superfluous Abstract Class Naming",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_SuperfluousErrorNaming",
    "title": "Classes: Superfluous Error Naming",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_SuperfluousExceptionNaming",
    "title": "Classes: Superfluous Exception Naming",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_SuperfluousInterfaceNaming",
    "title": "Classes: Superfluous Interface Naming",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_SuperfluousTraitNaming",
    "title": "Classes: Superfluous Trait Naming",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_TraitUseDeclaration",
    "title": "Classes: Trait Use Declaration",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_TraitUseSpacing",
    "title": "Classes: Trait Use Spacing",
    "parameters": [
      {
        "name": "linesCountAfterLastUseWhenLastInClass",
        "description": "linesCountAfterLastUseWhenLastInClass"
      },
      {
        "name": "linesCountBeforeFirstUse",
        "description": "linesCountBeforeFirstUse"
      },
      {
        "name": "linesCountAfterLastUse",
        "description": "linesCountAfterLastUse"
      },
      {
        "name": "linesCountBetweenUses",
        "description": "linesCountBetweenUses"
      },
      {
        "name": "linesCountBeforeFirstUseWhenFirstInClass",
        "description": "linesCountBeforeFirstUseWhenFirstInClass"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Classes_UselessLateStaticBinding",
    "title": "Classes: Useless Late Static Binding",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_AnnotationName",
    "title": "Commenting: Annotation Name",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_DeprecatedAnnotationDeclaration",
    "title": "Commenting: Deprecated Annotation Declaration",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_DisallowCommentAfterCode",
    "title": "Commenting: Disallow Comment After Code",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_DisallowOneLinePropertyDocComment",
    "title": "Commenting: Disallow One Line Property Doc Comment",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_DocCommentSpacing",
    "title": "Commenting: Doc Comment Spacing",
    "parameters": [
      {
        "name": "linesCountBeforeFirstContent",
        "description": "linesCountBeforeFirstContent"
      },
      {
        "name": "linesCountBetweenDescriptionAndAnnotations",
        "description": "linesCountBetweenDescriptionAndAnnotations"
      },
      {
        "name": "linesCountBetweenAnnotationsGroups",
        "description": "linesCountBetweenAnnotationsGroups"
      },
      {
        "name": "linesCountBetweenDifferentAnnotationsTypes",
        "description": "linesCountBetweenDifferentAnnotationsTypes"
      },
      {
        "name": "linesCountAfterLastContent",
        "description": "linesCountAfterLastContent"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_EmptyComment",
    "title": "Commenting: Empty Comment",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_ForbiddenAnnotations",
    "title": "Commenting: Forbidden Annotations",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_ForbiddenComments",
    "title": "Commenting: Forbidden Comments",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_InlineDocCommentDeclaration",
    "title": "Commenting: Inline Doc Comment Declaration",
    "parameters": [
      {
        "name": "allowDocCommentAboveReturn",
        "description": "allowDocCommentAboveReturn"
      },
      {
        "name": "allowAboveNonAssignment",
        "description": "allowAboveNonAssignment"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_RequireOneLineDocComment",
    "title": "Commenting: Require One Line Doc Comment",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_RequireOneLinePropertyDocComment",
    "title": "Commenting: Require One Line Property Doc Comment",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_UselessFunctionDocComment",
    "title": "Commenting: Useless Function Doc Comment",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Commenting_UselessInheritDocComment",
    "title": "Commenting: Useless Inherit Doc Comment",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Complexity_Cognitive",
    "title": "Complexity: Cognitive",
    "parameters": [
      {
        "name": "maxComplexity",
        "description": "maxComplexity"
      },
      {
        "name": "warningThreshold",
        "description": "warningThreshold"
      },
      {
        "name": "errorThreshold",
        "description": "errorThreshold"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_AssignmentInCondition",
    "title": "Control Structures: Assignment In Condition",
    "parameters": [
      {
        "name": "ignoreAssignmentsInsideFunctionCalls",
        "description": "ignoreAssignmentsInsideFunctionCalls"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_BlockControlStructureSpacing",
    "title": "Control Structures: Block Control Structure Spacing",
    "parameters": [
      {
        "name": "linesCountBefore",
        "description": "linesCountBefore"
      },
      {
        "name": "linesCountBeforeFirst",
        "description": "linesCountBeforeFirst"
      },
      {
        "name": "linesCountAfter",
        "description": "linesCountAfter"
      },
      {
        "name": "linesCountAfterLast",
        "description": "linesCountAfterLast"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_DisallowContinueWithoutIntegerOperandInSwitch",
    "title": "Control Structures: Disallow Continue Without Integer Operand In Switch",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_DisallowEmpty",
    "title": "Control Structures: Disallow Empty",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_DisallowNullSafeObjectOperator",
    "title": "Control Structures: Disallow Null Safe Object Operator",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_DisallowShortTernaryOperator",
    "title": "Control Structures: Disallow Short Ternary Operator",
    "parameters": [
      {
        "name": "fixable",
        "description": "fixable"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_DisallowTrailingMultiLineTernaryOperator",
    "title": "Control Structures: Disallow Trailing Multi Line Ternary Operator",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_DisallowYodaComparison",
    "title": "Control Structures: Disallow Yoda Comparison",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_EarlyExit",
    "title": "Control Structures: Early Exit",
    "parameters": [
      {
        "name": "ignoreStandaloneIfInScope",
        "description": "ignoreStandaloneIfInScope"
      },
      {
        "name": "ignoreOneLineTrailingIf",
        "description": "ignoreOneLineTrailingIf"
      },
      {
        "name": "ignoreTrailingIfWithOneInstruction",
        "description": "ignoreTrailingIfWithOneInstruction"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_JumpStatementsSpacing",
    "title": "Control Structures: Jump Statements Spacing",
    "parameters": [
      {
        "name": "allowSingleLineYieldStacking",
        "description": "allowSingleLineYieldStacking"
      },
      {
        "name": "linesCountAfterLast",
        "description": "linesCountAfterLast"
      },
      {
        "name": "linesCountAfterWhenLastInCaseOrDefault",
        "description": "linesCountAfterWhenLastInCaseOrDefault"
      },
      {
        "name": "linesCountBefore",
        "description": "linesCountBefore"
      },
      {
        "name": "linesCountAfterWhenLastInLastCaseOrDefault",
        "description": "linesCountAfterWhenLastInLastCaseOrDefault"
      },
      {
        "name": "linesCountBeforeFirst",
        "description": "linesCountBeforeFirst"
      },
      {
        "name": "linesCountBeforeWhenFirstInCaseOrDefault",
        "description": "linesCountBeforeWhenFirstInCaseOrDefault"
      },
      {
        "name": "linesCountAfter",
        "description": "linesCountAfter"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_LanguageConstructWithParentheses",
    "title": "Control Structures: Language Construct With Parentheses",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_NewWithParentheses",
    "title": "Control Structures: New With Parentheses",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_NewWithoutParentheses",
    "title": "Control Structures: New Without Parentheses",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_RequireMultiLineCondition",
    "title": "Control Structures: Require Multi Line Condition",
    "parameters": [
      {
        "name": "minLineLength",
        "description": "minLineLength"
      },
      {
        "name": "booleanOperatorOnPreviousLine",
        "description": "booleanOperatorOnPreviousLine"
      },
      {
        "name": "alwaysSplitAllConditionParts",
        "description": "alwaysSplitAllConditionParts"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_RequireMultiLineTernaryOperator",
    "title": "Control Structures: Require Multi Line Ternary Operator",
    "parameters": [
      {
        "name": "lineLengthLimit",
        "description": "lineLengthLimit"
      },
      {
        "name": "minExpressionsLength",
        "description": "minExpressionsLength"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_RequireNullCoalesceEqualOperator",
    "title": "Control Structures: Require Null Coalesce Equal Operator",
    "parameters": [
      {
        "name": "enable",
        "description": "enable"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_RequireNullCoalesceOperator",
    "title": "Control Structures: Require Null Coalesce Operator",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_RequireNullSafeObjectOperator",
    "title": "Control Structures: Require Null Safe Object Operator",
    "parameters": [
      {
        "name": "enable",
        "description": "enable"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_RequireShortTernaryOperator",
    "title": "Control Structures: Require Short Ternary Operator",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_RequireSingleLineCondition",
    "title": "Control Structures: Require Single Line Condition",
    "parameters": [
      {
        "name": "maxLineLength",
        "description": "maxLineLength"
      },
      {
        "name": "alwaysForSimpleConditions",
        "description": "alwaysForSimpleConditions"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_RequireTernaryOperator",
    "title": "Control Structures: Require Ternary Operator",
    "parameters": [
      {
        "name": "ignoreMultiLine",
        "description": "ignoreMultiLine"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_RequireYodaComparison",
    "title": "Control Structures: Require Yoda Comparison",
    "parameters": [
      {
        "name": "alwaysVariableOnRight",
        "description": "alwaysVariableOnRight"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_UselessIfConditionWithReturn",
    "title": "Control Structures: Useless If Condition With Return",
    "parameters": [
      {
        "name": "assumeAllConditionExpressionsAreAlreadyBoolean",
        "description": "assumeAllConditionExpressionsAreAlreadyBoolean"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_ControlStructures_UselessTernaryOperator",
    "title": "Control Structures: Useless Ternary Operator",
    "parameters": [
      {
        "name": "assumeAllConditionExpressionsAreAlreadyBoolean",
        "description": "assumeAllConditionExpressionsAreAlreadyBoolean"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Exceptions_DeadCatch",
    "title": "Exceptions: Dead Catch",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Exceptions_DisallowNonCapturingCatch",
    "title": "Exceptions: Disallow Non Capturing Catch",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Exceptions_ReferenceThrowableOnly",
    "title": "Exceptions: Reference Throwable Only",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Exceptions_RequireNonCapturingCatch",
    "title": "Exceptions: Require Non Capturing Catch",
    "parameters": [
      {
        "name": "enable",
        "description": "enable"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Files_FileLength",
    "title": "Files: File Length",
    "parameters": [
      {
        "name": "maxLinesLength",
        "description": "maxLinesLength"
      },
      {
        "name": "includeComments",
        "description": "includeComments"
      },
      {
        "name": "includeWhitespace",
        "description": "includeWhitespace"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Files_LineLength",
    "title": "Files: Line Length",
    "parameters": [
      {
        "name": "lineLengthLimit",
        "description": "lineLengthLimit"
      },
      {
        "name": "ignoreComments",
        "description": "ignoreComments"
      },
      {
        "name": "ignoreImports",
        "description": "ignoreImports"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Files_TypeNameMatchesFileName",
    "title": "Files: Type Name Matches File Name",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_ArrowFunctionDeclaration",
    "title": "Functions: Arrow Function Declaration",
    "parameters": [
      {
        "name": "spacesCountAfterKeyword",
        "description": "spacesCountAfterKeyword"
      },
      {
        "name": "spacesCountBeforeArrow",
        "description": "spacesCountBeforeArrow"
      },
      {
        "name": "spacesCountAfterArrow",
        "description": "spacesCountAfterArrow"
      },
      {
        "name": "allowMultiLine",
        "description": "allowMultiLine"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_DisallowArrowFunction",
    "title": "Functions: Disallow Arrow Function",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_DisallowEmptyFunction",
    "title": "Functions: Disallow Empty Function",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_DisallowNamedArguments",
    "title": "Functions: Disallow Named Arguments",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_DisallowTrailingCommaInCall",
    "title": "Functions: Disallow Trailing Comma In Call",
    "parameters": [
      {
        "name": "onlySingleLine",
        "description": "onlySingleLine"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_DisallowTrailingCommaInClosureUse",
    "title": "Functions: Disallow Trailing Comma In Closure Use",
    "parameters": [
      {
        "name": "onlySingleLine",
        "description": "onlySingleLine"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_DisallowTrailingCommaInDeclaration",
    "title": "Functions: Disallow Trailing Comma In Declaration",
    "parameters": [
      {
        "name": "onlySingleLine",
        "description": "onlySingleLine"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_FunctionLength",
    "title": "Functions: Function Length",
    "parameters": [
      {
        "name": "maxLinesLength",
        "description": "maxLinesLength"
      },
      {
        "name": "includeComments",
        "description": "includeComments"
      },
      {
        "name": "includeWhitespace",
        "description": "includeWhitespace"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_NamedArgumentSpacing",
    "title": "Functions: Named Argument Spacing",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_RequireArrowFunction",
    "title": "Functions: Require Arrow Function",
    "parameters": [
      {
        "name": "allowNested",
        "description": "allowNested"
      },
      {
        "name": "enable",
        "description": "enable"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_RequireMultiLineCall",
    "title": "Functions: Require Multi Line Call",
    "parameters": [
      {
        "name": "minLineLength",
        "description": "minLineLength"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_RequireSingleLineCall",
    "title": "Functions: Require Single Line Call",
    "parameters": [
      {
        "name": "maxLineLength",
        "description": "maxLineLength"
      },
      {
        "name": "ignoreWithComplexParameter",
        "description": "ignoreWithComplexParameter"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_RequireTrailingCommaInCall",
    "title": "Functions: Require Trailing Comma In Call",
    "parameters": [
      {
        "name": "enable",
        "description": "enable"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_RequireTrailingCommaInClosureUse",
    "title": "Functions: Require Trailing Comma In Closure Use",
    "parameters": [
      {
        "name": "enable",
        "description": "enable"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_RequireTrailingCommaInDeclaration",
    "title": "Functions: Require Trailing Comma In Declaration",
    "parameters": [
      {
        "name": "enable",
        "description": "enable"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_StaticClosure",
    "title": "Functions: Static Closure",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_StrictCall",
    "title": "Functions: Strict Call",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_UnusedInheritedVariablePassedToClosure",
    "title": "Functions: Unused Inherited Variable Passed To Closure",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_UnusedParameter",
    "title": "Functions: Unused Parameter",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Functions_UselessParameterDefaultValue",
    "title": "Functions: Useless Parameter Default Value",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_AlphabeticallySortedUses",
    "title": "Namespaces: Alphabetically Sorted Uses",
    "parameters": [
      {
        "name": "psr12Compatible",
        "description": "psr12Compatible"
      },
      {
        "name": "caseSensitive",
        "description": "caseSensitive"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_DisallowGroupUse",
    "title": "Namespaces: Disallow Group Use",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_FullyQualifiedClassNameInAnnotation",
    "title": "Namespaces: Fully Qualified Class Name In Annotation",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_FullyQualifiedExceptions",
    "title": "Namespaces: Fully Qualified Exceptions",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_FullyQualifiedGlobalConstants",
    "title": "Namespaces: Fully Qualified Global Constants",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_FullyQualifiedGlobalFunctions",
    "title": "Namespaces: Fully Qualified Global Functions",
    "parameters": [
      {
        "name": "includeSpecialFunctions",
        "description": "includeSpecialFunctions"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_MultipleUsesPerLine",
    "title": "Namespaces: Multiple Uses Per Line",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_NamespaceDeclaration",
    "title": "Namespaces: Namespace Declaration",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_NamespaceSpacing",
    "title": "Namespaces: Namespace Spacing",
    "parameters": [
      {
        "name": "linesCountBeforeNamespace",
        "description": "linesCountBeforeNamespace"
      },
      {
        "name": "linesCountAfterNamespace",
        "description": "linesCountAfterNamespace"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_ReferenceUsedNamesOnly",
    "title": "Namespaces: Reference Used Names Only",
    "parameters": [
      {
        "name": "searchAnnotations",
        "description": "searchAnnotations"
      },
      {
        "name": "allowFullyQualifiedExceptions",
        "description": "allowFullyQualifiedExceptions"
      },
      {
        "name": "allowFullyQualifiedGlobalFunctions",
        "description": "allowFullyQualifiedGlobalFunctions"
      },
      {
        "name": "allowFullyQualifiedNameForCollidingClasses",
        "description": "allowFullyQualifiedNameForCollidingClasses"
      },
      {
        "name": "allowFallbackGlobalFunctions",
        "description": "allowFallbackGlobalFunctions"
      },
      {
        "name": "allowFullyQualifiedGlobalClasses",
        "description": "allowFullyQualifiedGlobalClasses"
      },
      {
        "name": "allowFallbackGlobalConstants",
        "description": "allowFallbackGlobalConstants"
      },
      {
        "name": "allowFullyQualifiedGlobalConstants",
        "description": "allowFullyQualifiedGlobalConstants"
      },
      {
        "name": "allowFullyQualifiedNameForCollidingConstants",
        "description": "allowFullyQualifiedNameForCollidingConstants"
      },
      {
        "name": "allowFullyQualifiedNameForCollidingFunctions",
        "description": "allowFullyQualifiedNameForCollidingFunctions"
      },
      {
        "name": "allowPartialUses",
        "description": "allowPartialUses"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_RequireOneNamespaceInFile",
    "title": "Namespaces: Require One Namespace In File",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_UnusedUses",
    "title": "Namespaces: Unused Uses",
    "parameters": [
      {
        "name": "searchAnnotations",
        "description": "searchAnnotations"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_UseDoesNotStartWithBackslash",
    "title": "Namespaces: Use Does Not Start With Backslash",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_UseFromSameNamespace",
    "title": "Namespaces: Use From Same Namespace",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_UseOnlyWhitelistedNamespaces",
    "title": "Namespaces: Use Only Whitelisted Namespaces",
    "parameters": [
      {
        "name": "allowUseFromRootNamespace",
        "description": "allowUseFromRootNamespace"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_UseSpacing",
    "title": "Namespaces: Use Spacing",
    "parameters": [
      {
        "name": "linesCountBeforeFirstUse",
        "description": "linesCountBeforeFirstUse"
      },
      {
        "name": "linesCountBetweenUseTypes",
        "description": "linesCountBetweenUseTypes"
      },
      {
        "name": "linesCountAfterLastUse",
        "description": "linesCountAfterLastUse"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Namespaces_UselessAlias",
    "title": "Namespaces: Useless Alias",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Numbers_DisallowNumericLiteralSeparator",
    "title": "Numbers: Disallow Numeric Literal Separator",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Numbers_RequireNumericLiteralSeparator",
    "title": "Numbers: Require Numeric Literal Separator",
    "parameters": [
      {
        "name": "enable",
        "description": "enable"
      },
      {
        "name": "minDigitsBeforeDecimalPoint",
        "description": "minDigitsBeforeDecimalPoint"
      },
      {
        "name": "minDigitsAfterDecimalPoint",
        "description": "minDigitsAfterDecimalPoint"
      },
      {
        "name": "ignoreOctalNumbers",
        "description": "ignoreOctalNumbers"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Operators_DisallowEqualOperators",
    "title": "Operators: Disallow Equal Operators",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Operators_DisallowIncrementAndDecrementOperators",
    "title": "Operators: Disallow Increment And Decrement Operators",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Operators_NegationOperatorSpacing",
    "title": "Operators: Negation Operator Spacing",
    "parameters": [
      {
        "name": "spacesCount",
        "description": "spacesCount"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Operators_RequireCombinedAssignmentOperator",
    "title": "Operators: Require Combined Assignment Operator",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Operators_RequireOnlyStandaloneIncrementAndDecrementOperators",
    "title": "Operators: Require Only Standalone Increment And Decrement Operators",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Operators_SpreadOperatorSpacing",
    "title": "Operators: Spread Operator Spacing",
    "parameters": [
      {
        "name": "spacesCountAfterOperator",
        "description": "spacesCountAfterOperator"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_DisallowDirectMagicInvokeCall",
    "title": "PHP: Disallow Direct Magic Invoke Call",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_DisallowReference",
    "title": "PHP: Disallow Reference",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_ForbiddenClasses",
    "title": "PHP: Forbidden Classes",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_OptimizedFunctionsWithoutUnpacking",
    "title": "PHP: Optimized Functions Without Unpacking",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_ReferenceSpacing",
    "title": "PHP: Reference Spacing",
    "parameters": [
      {
        "name": "spacesCountAfterReference",
        "description": "spacesCountAfterReference"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_RequireExplicitAssertion",
    "title": "PHP: Require Explicit Assertion",
    "parameters": [
      {
        "name": "enableIntegerRanges",
        "description": "enableIntegerRanges"
      },
      {
        "name": "enableAdvancedStringTypes",
        "description": "enableAdvancedStringTypes"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_RequireNowdoc",
    "title": "PHP: Require Nowdoc",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_ShortList",
    "title": "PHP: Short List",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_TypeCast",
    "title": "PHP: Type Cast",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_UselessParentheses",
    "title": "PHP: Useless Parentheses",
    "parameters": [
      {
        "name": "ignoreComplexTernaryConditions",
        "description": "ignoreComplexTernaryConditions"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_PHP_UselessSemicolon",
    "title": "PHP: Useless Semicolon",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Strings_DisallowVariableParsing",
    "title": "Strings: Disallow Variable Parsing",
    "parameters": [
      {
        "name": "disallowDollarCurlySyntax",
        "description": "disallowDollarCurlySyntax"
      },
      {
        "name": "disallowCurlyDollarSyntax",
        "description": "disallowCurlyDollarSyntax"
      },
      {
        "name": "disallowSimpleSyntax",
        "description": "disallowSimpleSyntax"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_DeclareStrictTypes",
    "title": "Type Hints: Declare Strict Types",
    "parameters": [
      {
        "name": "declareOnFirstLine",
        "description": "declareOnFirstLine"
      },
      {
        "name": "linesCountBeforeDeclare",
        "description": "linesCountBeforeDeclare"
      },
      {
        "name": "linesCountAfterDeclare",
        "description": "linesCountAfterDeclare"
      },
      {
        "name": "spacesCountAroundEqualsSign",
        "description": "spacesCountAroundEqualsSign"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_DisallowArrayTypeHintSyntax",
    "title": "Type Hints: Disallow Array Type Hint Syntax",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_DisallowMixedTypeHint",
    "title": "Type Hints: Disallow Mixed Type Hint",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_LongTypeHints",
    "title": "Type Hints: Long Type Hints",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_NullTypeHintOnLastPosition",
    "title": "Type Hints: Null Type Hint On Last Position",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_NullableTypeForNullDefaultValue",
    "title": "Type Hints: Nullable Type For Null Default Value",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_ParameterTypeHint",
    "title": "Type Hints: Parameter Type Hint",
    "parameters": [
      {
        "name": "enableStandaloneNullTrueFalseTypeHints",
        "description": "enableStandaloneNullTrueFalseTypeHints"
      },
      {
        "name": "enableUnionTypeHint",
        "description": "enableUnionTypeHint"
      },
      {
        "name": "enableObjectTypeHint",
        "description": "enableObjectTypeHint"
      },
      {
        "name": "enableIntersectionTypeHint",
        "description": "enableIntersectionTypeHint"
      },
      {
        "name": "enableMixedTypeHint",
        "description": "enableMixedTypeHint"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_ParameterTypeHintSpacing",
    "title": "Type Hints: Parameter Type Hint Spacing",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_PropertyTypeHint",
    "title": "Type Hints: Property Type Hint",
    "parameters": [
      {
        "name": "enableStandaloneNullTrueFalseTypeHints",
        "description": "enableStandaloneNullTrueFalseTypeHints"
      },
      {
        "name": "enableUnionTypeHint",
        "description": "enableUnionTypeHint"
      },
      {
        "name": "enableIntersectionTypeHint",
        "description": "enableIntersectionTypeHint"
      },
      {
        "name": "enableMixedTypeHint",
        "description": "enableMixedTypeHint"
      },
      {
        "name": "enableNativeTypeHint",
        "description": "enableNativeTypeHint"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_ReturnTypeHint",
    "title": "Type Hints: Return Type Hint",
    "parameters": [
      {
        "name": "enableStandaloneNullTrueFalseTypeHints",
        "description": "enableStandaloneNullTrueFalseTypeHints"
      },
      {
        "name": "enableUnionTypeHint",
        "description": "enableUnionTypeHint"
      },
      {
        "name": "enableObjectTypeHint",
        "description": "enableObjectTypeHint"
      },
      {
        "name": "enableIntersectionTypeHint",
        "description": "enableIntersectionTypeHint"
      },
      {
        "name": "enableStaticTypeHint",
        "description": "enableStaticTypeHint"
      },
      {
        "name": "enableMixedTypeHint",
        "description": "enableMixedTypeHint"
      },
      {
        "name": "enableNeverTypeHint",
        "description": "enableNeverTypeHint"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_ReturnTypeHintSpacing",
    "title": "Type Hints: Return Type Hint Spacing",
    "parameters": [
      {
        "name": "spacesCountBeforeColon",
        "description": "spacesCountBeforeColon"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_UnionTypeHintFormat",
    "title": "Type Hints: Union Type Hint Format",
    "parameters": [
      {
        "name": "enable",
        "description": "enable"
      },
      {
        "name": "withSpaces",
        "description": "withSpaces"
      },
      {
        "name": "shortNullable",
        "description": "shortNullable"
      },
      {
        "name": "nullPosition",
        "description": "nullPosition"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_TypeHints_UselessConstantTypeHint",
    "title": "Type Hints: Useless Constant Type Hint",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Variables_DisallowSuperGlobalVariable",
    "title": "Variables: Disallow Super Global Variable",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Variables_DisallowVariableVariable",
    "title": "Variables: Disallow Variable Variable",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Variables_DuplicateAssignmentToVariable",
    "title": "Variables: Duplicate Assignment To Variable",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Variables_UnusedVariable",
    "title": "Variables: Unused Variable",
    "parameters": [
      {
        "name": "ignoreUnusedValuesWhenOnlyKeysAreUsedInForeach",
        "description": "ignoreUnusedValuesWhenOnlyKeysAreUsedInForeach"
      }
    ]
  },
  {
    "patternId": "SlevomatCodingStandard_Variables_UselessVariable",
    "title": "Variables: Useless Variable",
    "parameters": []
  },
  {
    "patternId": "SlevomatCodingStandard_Whitespaces_DuplicateSpaces",
    "title": "Whitespaces: Duplicate Spaces",
    "parameters": [
      {
        "name": "ignoreSpacesInMatch",
        "description": "ignoreSpacesInMatch"
      },
      {
        "name": "ignoreSpacesInAnnotation",
        "description": "ignoreSpacesInAnnotation"
      },
      {
        "name": "ignoreSpacesBeforeAssignment",
        "description": "ignoreSpacesBeforeAssignment"
      },
      {
        "name": "ignoreSpacesInParameters",
        "description": "ignoreSpacesInParameters"
      },
      {
        "name": "ignoreSpacesInComment",
        "description": "ignoreSpacesInComment"
      }
    ]
  },
  {
    "patternId": "Squiz_Arrays_ArrayBracketSpacing",
    "title": "Array Bracket Spacing",
    "description": "When referencing arrays you should not put whitespace around the opening bracket or before the closing bracket.",
    "parameters": []
  },
  {
    "patternId": "Squiz_Arrays_ArrayDeclaration",
    "title": "Array Declarations",
    "description": "This standard covers all array declarations, regardless of the number and type of values contained within the array.",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_ClassDefinitionClosingBraceSpace",
    "title": "CSS: Class Definition Closing Brace Space",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_ClassDefinitionNameSpacing",
    "title": "CSS: Class Definition Name Spacing",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_ClassDefinitionOpeningBraceSpace",
    "title": "CSS: Class Definition Opening Brace Space",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_ColonSpacing",
    "title": "CSS: Colon Spacing",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_ColourDefinition",
    "title": "CSS: Colour Definition",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_DisallowMultipleStyleDefinitions",
    "title": "CSS: Disallow Multiple Style Definitions",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_DuplicateClassDefinition",
    "title": "CSS: Duplicate Class Definition",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_DuplicateStyleDefinition",
    "title": "CSS: Duplicate Style Definition",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_EmptyClassDefinition",
    "title": "CSS: Empty Class Definition",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_EmptyStyleDefinition",
    "title": "CSS: Empty Style Definition",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_ForbiddenStyles",
    "title": "CSS: Forbidden Styles",
    "parameters": [
      {
        "name": "error",
        "description": "error"
      }
    ]
  },
  {
    "patternId": "Squiz_CSS_Indentation",
    "title": "CSS: Indentation",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "Squiz_CSS_LowercaseStyleDefinition",
    "title": "CSS: Lowercase Style Definition",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_MissingColon",
    "title": "CSS: Missing Colon",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_NamedColours",
    "title": "CSS: Named Colours",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_Opacity",
    "title": "CSS: Opacity",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_SemicolonSpacing",
    "title": "CSS: Semicolon Spacing",
    "parameters": []
  },
  {
    "patternId": "Squiz_CSS_ShorthandSize",
    "title": "CSS: Shorthand Size",
    "parameters": []
  },
  {
    "patternId": "Squiz_Classes_ClassDeclaration",
    "title": "Classes: Class Declaration",
    "parameters": []
  },
  {
    "patternId": "Squiz_Classes_ClassFileName",
    "title": "Classes: Class File Name",
    "parameters": []
  },
  {
    "patternId": "Squiz_Classes_DuplicateProperty",
    "title": "Classes: Duplicate Property",
    "parameters": []
  },
  {
    "patternId": "Squiz_Classes_LowercaseClassKeywords",
    "title": "Lowercase Class Keywords",
    "description": "The php keywords class, interface, trait, extends, implements, abstract, final, var, and const should be lowercase.",
    "parameters": []
  },
  {
    "patternId": "Squiz_Classes_SelfMemberReference",
    "title": "Self Member Reference",
    "description": "The self keyword should be used instead of the current class name, should be lowercase, and should not have spaces before or after it.",
    "parameters": []
  },
  {
    "patternId": "Squiz_Classes_ValidClassName",
    "title": "Classes: Valid Class Name",
    "parameters": []
  },
  {
    "patternId": "Squiz_Commenting_BlockComment",
    "title": "Commenting: Block Comment",
    "parameters": []
  },
  {
    "patternId": "Squiz_Commenting_ClassComment",
    "title": "Commenting: Class Comment",
    "parameters": []
  },
  {
    "patternId": "Squiz_Commenting_ClosingDeclarationComment",
    "title": "Commenting: Closing Declaration Comment",
    "parameters": []
  },
  {
    "patternId": "Squiz_Commenting_DocCommentAlignment",
    "title": "Doc Comment Alignment",
    "description": "The asterisks in a doc comment should align, and there should be one space between the asterisk and tags.",
    "parameters": []
  },
  {
    "patternId": "Squiz_Commenting_EmptyCatchComment",
    "title": "Commenting: Empty Catch Comment",
    "parameters": []
  },
  {
    "patternId": "Squiz_Commenting_FileComment",
    "title": "Commenting: File Comment",
    "parameters": []
  },
  {
    "patternId": "Squiz_Commenting_FunctionComment",
    "title": "Commenting: Function Comment",
    "parameters": [
      {
        "name": "skipIfInheritdoc",
        "description": "skipIfInheritdoc"
      }
    ]
  },
  {
    "patternId": "Squiz_Commenting_FunctionCommentThrowTag",
    "title": "Doc Comment Throws Tag",
    "description": "If a function throws any exceptions, they should be documented in a @throws tag.",
    "parameters": []
  },
  {
    "patternId": "Squiz_Commenting_InlineComment",
    "title": "Commenting: Inline Comment",
    "parameters": []
  },
  {
    "patternId": "Squiz_Commenting_LongConditionClosingComment",
    "title": "Commenting: Long Condition Closing Comment",
    "parameters": [
      {
        "name": "lineLimit",
        "description": "lineLimit"
      },
      {
        "name": "commentFormat",
        "description": "commentFormat"
      }
    ]
  },
  {
    "patternId": "Squiz_Commenting_PostStatementComment",
    "title": "Commenting: Post Statement Comment",
    "parameters": []
  },
  {
    "patternId": "Squiz_Commenting_VariableComment",
    "title": "Commenting: Variable Comment",
    "parameters": []
  },
  {
    "patternId": "Squiz_ControlStructures_ControlSignature",
    "title": "Control Structures: Control Signature",
    "parameters": [
      {
        "name": "requiredSpacesBeforeColon",
        "description": "requiredSpacesBeforeColon"
      }
    ]
  },
  {
    "patternId": "Squiz_ControlStructures_ElseIfDeclaration",
    "title": "Control Structures: Else If Declaration",
    "parameters": []
  },
  {
    "patternId": "Squiz_ControlStructures_ForEachLoopDeclaration",
    "title": "Foreach Loop Declarations",
    "description": "There should be a space between each element of a foreach loop and the as keyword should be lowercase.",
    "parameters": [
      {
        "name": "requiredSpacesAfterOpen",
        "description": "requiredSpacesAfterOpen"
      },
      {
        "name": "requiredSpacesBeforeClose",
        "description": "requiredSpacesBeforeClose"
      }
    ]
  },
  {
    "patternId": "Squiz_ControlStructures_ForLoopDeclaration",
    "title": "For Loop Declarations",
    "description": "In a for loop declaration, there should be no space inside the brackets and there should be 0 spaces before and 1 space after semicolons.",
    "parameters": [
      {
        "name": "requiredSpacesAfterOpen",
        "description": "requiredSpacesAfterOpen"
      },
      {
        "name": "requiredSpacesBeforeClose",
        "description": "requiredSpacesBeforeClose"
      },
      {
        "name": "ignoreNewlines",
        "description": "ignoreNewlines"
      }
    ]
  },
  {
    "patternId": "Squiz_ControlStructures_InlineIfDeclaration",
    "title": "Control Structures: Inline If Declaration",
    "parameters": []
  },
  {
    "patternId": "Squiz_ControlStructures_LowercaseDeclaration",
    "title": "Lowercase Control Structure Keywords",
    "description": "The php keywords if, else, elseif, foreach, for, do, switch, while, try, and catch should be lowercase.",
    "parameters": []
  },
  {
    "patternId": "Squiz_ControlStructures_SwitchDeclaration",
    "title": "Control Structures: Switch Declaration",
    "parameters": [
      {
        "name": "indent",
        "description": "indent"
      }
    ]
  },
  {
    "patternId": "Squiz_Debug_JSLint",
    "title": "Debug: JS Lint",
    "parameters": []
  },
  {
    "patternId": "Squiz_Debug_JavaScriptLint",
    "title": "Debug: Java Script Lint",
    "parameters": []
  },
  {
    "patternId": "Squiz_Files_FileExtension",
    "title": "Files: File Extension",
    "parameters": []
  },
  {
    "patternId": "Squiz_Formatting_OperatorBracket",
    "title": "Formatting: Operator Bracket",
    "parameters": []
  },
  {
    "patternId": "Squiz_Functions_FunctionDeclaration",
    "title": "Functions: Function Declaration",
    "parameters": []
  },
  {
    "patternId": "Squiz_Functions_FunctionDeclarationArgumentSpacing",
    "title": "Functions: Function Declaration Argument Spacing",
    "parameters": [
      {
        "name": "equalsSpacing",
        "description": "equalsSpacing"
      },
      {
        "name": "requiredSpacesAfterOpen",
        "description": "requiredSpacesAfterOpen"
      },
      {
        "name": "requiredSpacesBeforeClose",
        "description": "requiredSpacesBeforeClose"
      }
    ]
  },
  {
    "patternId": "Squiz_Functions_FunctionDuplicateArgument",
    "title": "Lowercase Built-In functions",
    "description": "All PHP built-in functions should be lowercased when called.",
    "parameters": []
  },
  {
    "patternId": "Squiz_Functions_GlobalFunction",
    "title": "Functions: Global Function",
    "parameters": []
  },
  {
    "patternId": "Squiz_Functions_LowercaseFunctionKeywords",
    "title": "Lowercase Function Keywords",
    "description": "The php keywords function, public, private, protected, and static should be lowercase.",
    "parameters": []
  },
  {
    "patternId": "Squiz_Functions_MultiLineFunctionDeclaration",
    "title": "Functions: Multi Line Function Declaration",
    "parameters": []
  },
  {
    "patternId": "Squiz_NamingConventions_ValidFunctionName",
    "title": "Naming Conventions: Valid Function Name",
    "parameters": []
  },
  {
    "patternId": "Squiz_NamingConventions_ValidVariableName",
    "title": "Naming Conventions: Valid Variable Name",
    "parameters": []
  },
  {
    "patternId": "Squiz_Objects_DisallowObjectStringIndex",
    "title": "Objects: Disallow Object String Index",
    "parameters": []
  },
  {
    "patternId": "Squiz_Objects_ObjectInstantiation",
    "title": "Objects: Object Instantiation",
    "parameters": []
  },
  {
    "patternId": "Squiz_Objects_ObjectMemberComma",
    "title": "Objects: Object Member Comma",
    "parameters": []
  },
  {
    "patternId": "Squiz_Operators_ComparisonOperatorUsage",
    "title": "Operators: Comparison Operator Usage",
    "parameters": []
  },
  {
    "patternId": "Squiz_Operators_IncrementDecrementUsage",
    "title": "Operators: Increment Decrement Usage",
    "parameters": []
  },
  {
    "patternId": "Squiz_Operators_ValidLogicalOperators",
    "title": "Operators: Valid Logical Operators",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_CommentedOutCode",
    "title": "PHP: Commented Out Code",
    "parameters": [
      {
        "name": "maxPercentage",
        "description": "maxPercentage"
      }
    ]
  },
  {
    "patternId": "Squiz_PHP_DisallowBooleanStatement",
    "title": "PHP: Disallow Boolean Statement",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_DisallowComparisonAssignment",
    "title": "PHP: Disallow Comparison Assignment",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_DisallowInlineIf",
    "title": "PHP: Disallow Inline If",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_DisallowMultipleAssignments",
    "title": "PHP: Disallow Multiple Assignments",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_DisallowSizeFunctionsInLoops",
    "title": "PHP: Disallow Size Functions In Loops",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_DiscouragedFunctions",
    "title": "PHP: Discouraged Functions",
    "parameters": [
      {
        "name": "error",
        "description": "error"
      }
    ]
  },
  {
    "patternId": "Squiz_PHP_EmbeddedPhp",
    "title": "PHP: Embedded Php",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_Eval",
    "title": "PHP: Eval",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_GlobalKeyword",
    "title": "PHP: Global Keyword",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_Heredoc",
    "title": "PHP: Heredoc",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_InnerFunctions",
    "title": "PHP: Inner Functions",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_LowercasePHPFunctions",
    "title": "PHP: Lowercase PHP Functions",
    "parameters": []
  },
  {
    "patternId": "Squiz_PHP_NonExecutableCode",
    "title": "PHP: Non Executable Code",
    "parameters": []
  },
  {
    "patternId": "Squiz_Scope_MemberVarScope",
    "title": "Scope: Member Var Scope",
    "parameters": []
  },
  {
    "patternId": "Squiz_Scope_MethodScope",
    "title": "Scope: Method Scope",
    "parameters": []
  },
  {
    "patternId": "Squiz_Scope_StaticThisUsage",
    "title": "Static This Usage",
    "description": "Static methods should not use $this.",
    "parameters": []
  },
  {
    "patternId": "Squiz_Strings_ConcatenationSpacing",
    "title": "Strings: Concatenation Spacing",
    "parameters": [
      {
        "name": "spacing",
        "description": "spacing"
      },
      {
        "name": "ignoreNewlines",
        "description": "ignoreNewlines"
      }
    ]
  },
  {
    "patternId": "Squiz_Strings_DoubleQuoteUsage",
    "title": "Strings: Double Quote Usage",
    "parameters": []
  },
  {
    "patternId": "Squiz_Strings_EchoedStrings",
    "title": "Echoed Strings",
    "description": "Simple strings should not be enclosed in parentheses when being echoed.",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_CastSpacing",
    "title": "Cast Whitespace",
    "description": "Casts should not have whitespace inside the parentheses.",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_ControlStructureSpacing",
    "title": "White Space: Control Structure Spacing",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_FunctionClosingBraceSpace",
    "title": "White Space: Function Closing Brace Space",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_FunctionOpeningBraceSpace",
    "title": "White Space: Function Opening Brace Space",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_FunctionSpacing",
    "title": "White Space: Function Spacing",
    "parameters": [
      {
        "name": "spacing",
        "description": "spacing"
      },
      {
        "name": "spacingBeforeFirst",
        "description": "spacingBeforeFirst"
      },
      {
        "name": "spacingAfterLast",
        "description": "spacingAfterLast"
      }
    ]
  },
  {
    "patternId": "Squiz_WhiteSpace_LanguageConstructSpacing",
    "title": "Language Construct Whitespace",
    "description": "The php constructs echo, print, return, include, include_once, require, require_once, and new should have one space after them.",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_LogicalOperatorSpacing",
    "title": "White Space: Logical Operator Spacing",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_MemberVarSpacing",
    "title": "White Space: Member Var Spacing",
    "parameters": [
      {
        "name": "spacing",
        "description": "spacing"
      },
      {
        "name": "spacingBeforeFirst",
        "description": "spacingBeforeFirst"
      }
    ]
  },
  {
    "patternId": "Squiz_WhiteSpace_ObjectOperatorSpacing",
    "title": "Object Operator Spacing",
    "description": "The object operator (->) should not have any space around it.",
    "parameters": [
      {
        "name": "ignoreNewlines",
        "description": "ignoreNewlines"
      }
    ]
  },
  {
    "patternId": "Squiz_WhiteSpace_OperatorSpacing",
    "title": "White Space: Operator Spacing",
    "parameters": [
      {
        "name": "ignoreNewlines",
        "description": "ignoreNewlines"
      },
      {
        "name": "ignoreSpacingBeforeAssignments",
        "description": "ignoreSpacingBeforeAssignments"
      }
    ]
  },
  {
    "patternId": "Squiz_WhiteSpace_PropertyLabelSpacing",
    "title": "White Space: Property Label Spacing",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_ScopeClosingBrace",
    "title": "White Space: Scope Closing Brace",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_ScopeKeywordSpacing",
    "title": "Scope Keyword Spacing",
    "description": "The php keywords static, public, private, and protected should have one space after them.",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_SemicolonSpacing",
    "title": "Semicolon Spacing",
    "description": "Semicolons should not have spaces before them.",
    "parameters": []
  },
  {
    "patternId": "Squiz_WhiteSpace_SuperfluousWhitespace",
    "title": "White Space: Superfluous Whitespace",
    "parameters": [
      {
        "name": "ignoreBlankLines",
        "description": "ignoreBlankLines"
      }
    ]
  },
  {
    "patternId": "Symfony_Arrays_MultiLineArrayComma",
    "title": "Arrays: Multi Line Array Comma",
    "parameters": []
  },
  {
    "patternId": "Symfony_Classes_MultipleClassesOneFile",
    "title": "Classes: Multiple Classes One File",
    "parameters": []
  },
  {
    "patternId": "Symfony_Classes_PropertyDeclaration",
    "title": "Classes: Property Declaration",
    "parameters": []
  },
  {
    "patternId": "Symfony_Commenting_Annotations",
    "title": "Commenting: Annotations",
    "parameters": []
  },
  {
    "patternId": "Symfony_Commenting_ClassComment",
    "title": "Commenting: Class Comment",
    "parameters": []
  },
  {
    "patternId": "Symfony_Commenting_FunctionComment",
    "title": "Commenting: Function Comment",
    "parameters": []
  },
  {
    "patternId": "Symfony_Commenting_License",
    "title": "Commenting: License",
    "parameters": []
  },
  {
    "patternId": "Symfony_Commenting_TypeHinting",
    "title": "Commenting: Type Hinting",
    "parameters": []
  },
  {
    "patternId": "Symfony_ControlStructure_IdenticalComparison",
    "title": "Control Structure: Identical Comparison",
    "parameters": []
  },
  {
    "patternId": "Symfony_ControlStructure_UnaryOperators",
    "title": "Control Structure: Unary Operators",
    "parameters": []
  },
  {
    "patternId": "Symfony_ControlStructure_YodaConditions",
    "title": "Control Structure: Yoda Conditions",
    "parameters": []
  },
  {
    "patternId": "Symfony_Errors_ExceptionMessage",
    "title": "Errors: Exception Message",
    "parameters": []
  },
  {
    "patternId": "Symfony_Errors_UserDeprecated",
    "title": "Errors: User Deprecated",
    "parameters": []
  },
  {
    "patternId": "Symfony_Files_AlphanumericFilename",
    "title": "Files: Alphanumeric Filename",
    "parameters": []
  },
  {
    "patternId": "Symfony_Formatting_BlankLineBeforeReturn",
    "title": "Formatting: Blank Line Before Return",
    "parameters": []
  },
  {
    "patternId": "Symfony_Formatting_ReturnOrThrow",
    "title": "Formatting: Return Or Throw",
    "parameters": []
  },
  {
    "patternId": "Symfony_Functions_Arguments",
    "title": "Functions: Arguments",
    "parameters": []
  },
  {
    "patternId": "Symfony_Functions_ReturnType",
    "title": "Functions: Return Type",
    "parameters": []
  },
  {
    "patternId": "Symfony_Functions_ScopeOrder",
    "title": "Functions: Scope Order",
    "parameters": []
  },
  {
    "patternId": "Symfony_NamingConventions_ValidClassName",
    "title": "Naming Conventions: Valid Class Name",
    "parameters": []
  },
  {
    "patternId": "Symfony_Objects_ObjectInstantiation",
    "title": "Objects: Object Instantiation",
    "parameters": []
  },
  {
    "patternId": "Symfony_Whitespace_AssignmentSpacing",
    "title": "Whitespace: Assignment Spacing",
    "parameters": []
  },
  {
    "patternId": "Symfony_Whitespace_BinaryOperatorSpacing",
    "title": "Whitespace: Binary Operator Spacing",
    "parameters": []
  },
  {
    "patternId": "Symfony_Whitespace_CommaSpacing",
    "title": "Whitespace: Comma Spacing",
    "parameters": []
  },
  {
    "patternId": "Symfony_Whitespace_DiscourageFitzinator",
    "title": "Whitespace: Discourage Fitzinator",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Classes_DeclarationCompatibility",
    "title": "Classes: Declaration Compatibility",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Classes_RestrictedExtendClasses",
    "title": "Classes: Restricted Extend Classes",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Constants_ConstantString",
    "title": "Constants: Constant String",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Constants_RestrictedConstants",
    "title": "Constants: Restricted Constants",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Files_IncludingFile",
    "title": "Files: Including File",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Files_IncludingNonPHPFile",
    "title": "Files: Including Non PHP File",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Functions_CheckReturnValue",
    "title": "Functions: Check Return Value",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Functions_DynamicCalls",
    "title": "Functions: Dynamic Calls",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Functions_RestrictedFunctions",
    "title": "Functions: Restricted Functions",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Functions_StripTags",
    "title": "Functions: Strip Tags",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Hooks_AlwaysReturnInFilter",
    "title": "Hooks: Always Return In Filter",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Hooks_PreGetPosts",
    "title": "Hooks: Pre Get Posts",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Hooks_RestrictedHooks",
    "title": "Hooks: Restricted Hooks",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_JS_DangerouslySetInnerHTML",
    "title": "JS: Dangerously Set Inner HTML",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_JS_HTMLExecutingFunctions",
    "title": "JS: HTML Executing Functions",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_JS_InnerHTML",
    "title": "JS: Inner HTML",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_JS_StringConcat",
    "title": "JS: String Concat",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_JS_StrippingTags",
    "title": "JS: Stripping Tags",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_JS_Window",
    "title": "JS: Window",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Performance_CacheValueOverride",
    "title": "Performance: Cache Value Override",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Performance_FetchingRemoteData",
    "title": "Performance: Fetching Remote Data",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Performance_LowExpiryCacheTime",
    "title": "Performance: Low Expiry Cache Time",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Performance_NoPaging",
    "title": "Performance: No Paging",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Performance_OrderByRand",
    "title": "Performance: Order By Rand",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Performance_RegexpCompare",
    "title": "Performance: Regexp Compare",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Performance_RemoteRequestTimeout",
    "title": "Performance: Remote Request Timeout",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Performance_TaxonomyMetaInOptions",
    "title": "Performance: Taxonomy Meta In Options",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Performance_WPQueryParams",
    "title": "Performance: WP Query Params",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Security_EscapingVoidReturnFunctions",
    "title": "Security: Escaping Void Return Functions",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Security_ExitAfterRedirect",
    "title": "Security: Exit After Redirect",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Security_Mustache",
    "title": "Security: Mustache",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Security_PHPFilterFunctions",
    "title": "Security: PHP Filter Functions",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Security_ProperEscapingFunction",
    "title": "Security: Proper Escaping Function",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Security_StaticStrreplace",
    "title": "Security: Static Strreplace",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Security_Twig",
    "title": "Security: Twig",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Security_Underscorejs",
    "title": "Security: Underscorejs",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Security_Vuejs",
    "title": "Security: Vuejs",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_UserExperience_AdminBarRemoval",
    "title": "User Experience: Admin Bar Removal",
    "parameters": [
      {
        "name": "remove_only",
        "description": "remove_only"
      }
    ]
  },
  {
    "patternId": "WordPressVIPMinimum_Variables_RestrictedVariables",
    "title": "Variables: Restricted Variables",
    "parameters": []
  },
  {
    "patternId": "WordPressVIPMinimum_Variables_ServerVariables",
    "title": "Variables: Server Variables",
    "parameters": []
  },
  {
    "patternId": "WordPress_Arrays_ArrayDeclarationSpacing",
    "title": "Arrays: Array Declaration Spacing",
    "parameters": [
      {
        "name": "allow_single_item_single_line_associative_arrays",
        "description": "allow_single_item_single_line_associative_arrays"
      }
    ]
  },
  {
    "patternId": "WordPress_Arrays_ArrayIndentation",
    "title": "Arrays: Array Indentation",
    "parameters": [
      {
        "name": "tabIndent",
        "description": "tabIndent"
      }
    ]
  },
  {
    "patternId": "WordPress_Arrays_ArrayKeySpacingRestrictions",
    "title": "Arrays: Array Key Spacing Restrictions",
    "parameters": []
  },
  {
    "patternId": "WordPress_Arrays_MultipleStatementAlignment",
    "title": "Arrays: Multiple Statement Alignment",
    "parameters": [
      {
        "name": "ignoreNewlines",
        "description": "ignoreNewlines"
      },
      {
        "name": "exact",
        "description": "exact"
      },
      {
        "name": "maxColumn",
        "description": "maxColumn"
      },
      {
        "name": "alignMultilineItems",
        "description": "alignMultilineItems"
      }
    ]
  },
  {
    "patternId": "WordPress_CodeAnalysis_AssignmentInTernaryCondition",
    "title": "Code Analysis: Assignment In Ternary Condition",
    "parameters": []
  },
  {
    "patternId": "WordPress_CodeAnalysis_EscapedNotTranslated",
    "title": "Code Analysis: Escaped Not Translated",
    "parameters": []
  },
  {
    "patternId": "WordPress_DB_DirectDatabaseQuery",
    "title": "DB: Direct Database Query",
    "parameters": []
  },
  {
    "patternId": "WordPress_DB_PreparedSQL",
    "title": "DB: Prepared SQL",
    "parameters": []
  },
  {
    "patternId": "WordPress_DB_PreparedSQLPlaceholders",
    "title": "DB: Prepared SQL Placeholders",
    "parameters": []
  },
  {
    "patternId": "WordPress_DB_RestrictedClasses",
    "title": "DB: Restricted Classes",
    "parameters": []
  },
  {
    "patternId": "WordPress_DB_RestrictedFunctions",
    "title": "DB: Restricted Functions",
    "parameters": []
  },
  {
    "patternId": "WordPress_DB_SlowDBQuery",
    "title": "DB: Slow DB Query",
    "parameters": []
  },
  {
    "patternId": "WordPress_DateTime_CurrentTimeTimestamp",
    "title": "Date Time: Current Time Timestamp",
    "parameters": []
  },
  {
    "patternId": "WordPress_DateTime_RestrictedFunctions",
    "title": "Date Time: Restricted Functions",
    "parameters": []
  },
  {
    "patternId": "WordPress_Files_FileName",
    "title": "Files: File Name",
    "parameters": [
      {
        "name": "is_theme",
        "description": "is_theme"
      },
      {
        "name": "strict_class_file_names",
        "description": "strict_class_file_names"
      }
    ]
  },
  {
    "patternId": "WordPress_NamingConventions_PrefixAllGlobals",
    "title": "Naming Conventions: Prefix All Globals (Deprecated)",
    "parameters": []
  },
  {
    "patternId": "WordPress_NamingConventions_ValidFunctionName",
    "title": "Naming Conventions: Valid Function Name (Deprecated)",
    "parameters": []
  },
  {
    "patternId": "WordPress_NamingConventions_ValidHookName",
    "title": "Naming Conventions: Valid Hook Name",
    "parameters": [
      {
        "name": "additionalWordDelimiters",
        "description": "additionalWordDelimiters"
      }
    ]
  },
  {
    "patternId": "WordPress_NamingConventions_ValidPostTypeSlug",
    "title": "Naming Conventions: Valid Post Type Slug",
    "parameters": []
  },
  {
    "patternId": "WordPress_NamingConventions_ValidVariableName",
    "title": "Naming Conventions: Valid Variable Name",
    "parameters": []
  },
  {
    "patternId": "WordPress_PHP_DevelopmentFunctions",
    "title": "PHP: Development Functions",
    "parameters": []
  },
  {
    "patternId": "WordPress_PHP_DiscouragedPHPFunctions",
    "title": "PHP: Discouraged PHP Functions",
    "parameters": []
  },
  {
    "patternId": "WordPress_PHP_DontExtract",
    "title": "PHP: Dont Extract",
    "parameters": []
  },
  {
    "patternId": "WordPress_PHP_IniSet",
    "title": "PHP: Ini Set",
    "parameters": []
  },
  {
    "patternId": "WordPress_PHP_NoSilencedErrors",
    "title": "PHP: No Silenced Errors",
    "parameters": [
      {
        "name": "context_length",
        "description": "context_length"
      },
      {
        "name": "usePHPFunctionsList",
        "description": "usePHPFunctionsList"
      }
    ]
  },
  {
    "patternId": "WordPress_PHP_POSIXFunctions",
    "title": "PHP: POSIX Functions",
    "parameters": []
  },
  {
    "patternId": "WordPress_PHP_PregQuoteDelimiter",
    "title": "PHP: Preg Quote Delimiter",
    "parameters": []
  },
  {
    "patternId": "WordPress_PHP_RestrictedPHPFunctions",
    "title": "PHP: Restricted PHP Functions",
    "parameters": []
  },
  {
    "patternId": "WordPress_PHP_StrictInArray",
    "title": "PHP: Strict In Array",
    "parameters": []
  },
  {
    "patternId": "WordPress_PHP_TypeCasts",
    "title": "PHP: Type Casts",
    "parameters": []
  },
  {
    "patternId": "WordPress_PHP_YodaConditions",
    "title": "PHP: Yoda Conditions",
    "parameters": []
  },
  {
    "patternId": "WordPress_Security_EscapeOutput",
    "title": "Security: Escape Output",
    "parameters": []
  },
  {
    "patternId": "WordPress_Security_NonceVerification",
    "title": "Security: Nonce Verification",
    "parameters": []
  },
  {
    "patternId": "WordPress_Security_PluginMenuSlug",
    "title": "Security: Plugin Menu Slug",
    "parameters": []
  },
  {
    "patternId": "WordPress_Security_SafeRedirect",
    "title": "Security: Safe Redirect",
    "parameters": []
  },
  {
    "patternId": "WordPress_Security_ValidatedSanitizedInput",
    "title": "Security: Validated Sanitized Input",
    "parameters": [
      {
        "name": "check_validation_in_scope_only",
        "description": "check_validation_in_scope_only"
      }
    ]
  },
  {
    "patternId": "WordPress_Utils_I18nTextDomainFixer",
    "title": "Utils: I18n Text Domain Fixer",
    "parameters": [
      {
        "name": "new_text_domain",
        "description": "new_text_domain"
      }
    ]
  },
  {
    "patternId": "WordPress_WP_AlternativeFunctions",
    "title": "WP: Alternative Functions",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_Capabilities",
    "title": "WP: Capabilities",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_CapitalPDangit",
    "title": "WP: Capital P Dangit",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_ClassNameCase",
    "title": "WP: Class Name Case",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_CronInterval",
    "title": "WP: Cron Interval",
    "parameters": [
      {
        "name": "min_interval",
        "description": "min_interval"
      }
    ]
  },
  {
    "patternId": "WordPress_WP_DeprecatedClasses",
    "title": "WP: Deprecated Classes",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_DeprecatedFunctions",
    "title": "WP: Deprecated Functions",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_DeprecatedParameterValues",
    "title": "WP: Deprecated Parameter Values",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_DeprecatedParameters",
    "title": "WP: Deprecated Parameters",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_DiscouragedConstants",
    "title": "WP: Discouraged Constants",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_DiscouragedFunctions",
    "title": "WP: Discouraged Functions",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_EnqueuedResourceParameters",
    "title": "WP: Enqueued Resource Parameters",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_EnqueuedResources",
    "title": "WP: Enqueued Resources",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_GlobalVariablesOverride",
    "title": "WP: Global Variables Override",
    "parameters": [
      {
        "name": "treat_files_as_scoped",
        "description": "treat_files_as_scoped"
      }
    ]
  },
  {
    "patternId": "WordPress_WP_I18n",
    "title": "WP: I18n",
    "parameters": []
  },
  {
    "patternId": "WordPress_WP_PostsPerPage",
    "title": "WP: Posts Per Page",
    "parameters": [
      {
        "name": "posts_per_page",
        "description": "posts_per_page"
      }
    ]
  },
  {
    "patternId": "WordPress_WhiteSpace_CastStructureSpacing",
    "title": "White Space: Cast Structure Spacing",
    "parameters": []
  },
  {
    "patternId": "WordPress_WhiteSpace_ControlStructureSpacing",
    "title": "White Space: Control Structure Spacing",
    "parameters": [
      {
        "name": "blank_line_check",
        "description": "blank_line_check"
      },
      {
        "name": "blank_line_after_check",
        "description": "blank_line_after_check"
      },
      {
        "name": "space_before_colon",
        "description": "space_before_colon"
      }
    ]
  },
  {
    "patternId": "WordPress_WhiteSpace_ObjectOperatorSpacing",
    "title": "White Space: Object Operator Spacing",
    "parameters": []
  },
  {
    "patternId": "WordPress_WhiteSpace_OperatorSpacing",
    "title": "White Space: Operator Spacing",
    "parameters": [
      {
        "name": "ignoreNewlines",
        "description": "ignoreNewlines"
      }
    ]
  },
  {
    "patternId": "Zend_Debug_CodeAnalyzer",
    "title": "Zend Code Analyzer",
    "description": "PHP Code should pass the zend code analyzer.",
    "parameters": []
  },
  {
    "patternId": "Zend_Files_ClosingTag",
    "title": "Closing PHP Tags",
    "description": "Files should not have closing php tags.",
    "parameters": []
  },
  {
    "patternId": "Zend_NamingConventions_ValidVariableName",
    "title": "Variable Names",
    "description": "Variable names should be camelCased with the first letter lowercase.  Private and protected member variables should begin with an underscore",
    "parameters": []
  }
]